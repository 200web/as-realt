// Codebase collection from ./src
// Generated: 2025-03-31T05:14:36.069Z



================================================================================
// FILE: src/app/ClientBackground11.tsx
================================================================================

"use client"

import React from 'react';

const ClientBackground = () => {
  return (
    <style jsx global>{`
      body::before {
        content: "";
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: -1;
        background-image: url('/realty_app/bg1.jpg');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        -webkit-transform: translateZ(0);
        transform: translateZ(0);
        will-change: transform;
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        pointer-events: none;
      }
    `}</style>
  );
};

export default ClientBackground;

================================================================================
// FILE: src/app/about-us/layout.tsx
================================================================================

// app/about-us/layout.tsx
export default function AboutUsLayout({
    children,
  }: {
    children: React.ReactNode;
  }) {
    return (
      <div>
        {/* Any specific layout elements for About Us page */}
        {children}
      </div>
    );
  }

================================================================================
// FILE: src/app/about-us/page.module.css
================================================================================

.page {
  width: 100%;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  position: relative;
}

/* Remove background from .main */
.main {
  flex: 1;
  display: flex;
  flex-direction: column;
  position: relative;
  z-index: 1; /* Ensure content is above background */
}

/* Remove the pageBackground class as we're using ClientBackground component instead */
/* .pageBackground class removed */

/* Full-width image styles */
.fullWidthImageSection {
  width: 100%;
  padding: 0;
  display: flex;
  justify-content: center;
  overflow: hidden;
}

.imageContainer {
  max-width: 1400px;
  width: 100%;
  background-color: #20222B;
  position: relative;
}

.fullWidthImage {
  width: 100%;
  height: auto;
  display: block;
}

@media (max-width: 1400px) {
  .imageContainer {
    max-width: 100%;
  }
}

@media (max-width: 768px) {
  .fullWidthImageSection {
    height: auto;
  }
  
  .fullWidthImage {
    height: 300px;
    object-fit: cover;
  }
}

================================================================================
// FILE: src/app/about-us/page.tsx
================================================================================

'use client';

import React from "react";
import Header from "../../components/Header/Header";
import AboutUsSection from "../../components/AboutUsSection/AboutUsSection";
import PrincipSection from "../../components/PrincipSection/PrincipSection"; 
import Footer from "../../components/Footer/Footer";
import styles from "./page.module.css";

export default function AboutPage() {
  return (
    <div className={styles.page}>
      <main className={styles.main}>
        <Header />
        <AboutUsSection />
        <PrincipSection />
        <Footer />
      </main>
    </div>
  );
}

================================================================================
// FILE: src/app/assets/HomeBG1.jpg
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/app/assets/Mask_group.png
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/app/assets/hero.jpg
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/app/globals.css
================================================================================

@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@100..900&display=swap');

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  width: 100%;
  max-width: 100%;
  overflow-x: hidden;
  margin: 0;
  padding: 0;
  font-family: 'Montserrat', sans-serif;
}

/* Keep only ONE background implementation - the most reliable one */
body::before {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
  background-image: url('/realty_app/bg1.jpg');
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  -webkit-transform: translateZ(0); /* Force hardware acceleration */
  transform: translateZ(0);
  -webkit-backface-visibility: hidden; /* Prevent flickering */
  backface-visibility: hidden;
  pointer-events: none;
}

/* Scroll Behavior Improvements */
html {
  scroll-behavior: smooth;
  height: 100%;
}

body {
  min-height: 100%;
  position: relative;
}

/* Default scroll margins for sections */
#properties,
#advantages,
#specialists,
#stages,
#testimonials,
#docs,
#form,
#contacts {
  scroll-margin-top: 120px; /* Large default value */
  position: relative; /* Establish positioning context */
  z-index: 1; /* Ensure the element is stacked properly */
}

/* Adjust for mobile */
@media (max-width: 768px) {
  /* Adjust for mobile */
  @media (max-width: 768px) {
    section[id] {
      scroll-margin-top: 140px;
    }
  }
}

/* Default scroll margins for all section targets */
section[id] {
  scroll-margin-top: 120px;
  position: relative;
  z-index: 1;
}


/* Fix for iOS */
@supports (-webkit-touch-callout: none) {
  html {
    /* Disable smooth scrolling on iOS as it can cause issues */
    scroll-behavior: auto;
  }
  
  /* Add padding to account for fixed header on iOS */
  body {
    padding-top: 0;
  }
}

/* Make all images responsive */
img {
  max-width: 100%;
  height: auto;
}

/* Make all sections and containers responsive */
section, 
.container,
.content,
.heroContent,
.carouselContainer,
.testimonialGroup,
.contactsContent,
.stagesContainer,
.advantagesGrid,
.form,
.propertiesGrid,
.carousel {
  width: 100%;
  max-width: 100%;
  overflow-x: hidden;
}


section {
  padding-left: 20px !important;
  padding-right: 20px !important;
  box-sizing: border-box;
}

.container {
  padding-left: 0 !important;
  padding-right: 0 !important;
  width: 100% !important;
}

/* Fix for button widths on small screens */
@media (max-width: 450px) {
  .ctaButton,
  .submitButton,
  .leaveCommentButton {
    width: 100%;
    box-sizing: border-box;
  }
  
  .ctaButton a,
  .submitButton a,
  .leaveCommentButton a {
    width: 100%;
    box-sizing: border-box;
  }
  
  /* Fix for grid layouts on small screens */
  .stageRow,
  .advantagesGrid,
  .contactsContent,
  .propertiesGrid,
  .form {
    display: flex;
    flex-direction: column;
  }
  
  /* Ensure padding doesn't cause overflow */
  .container {
    padding-left: 15px;
    padding-right: 15px;
  }
  
  /* Fix for testimonial cards */
  .testimonialCard {
    width: 100%;
  }
}

================================================================================
// FILE: src/app/icon.png
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/app/layout.tsx
================================================================================

import "./globals.css";
export { metadata } from "./metadata";
import ScrollFix from "../components/ScrollFix/ScrollFix";

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body style={{
        margin: 0,
        padding: 0,
        overflowX: 'hidden', // Prevent horizontal scrolling
        position: 'relative' // Create a new stacking context
      }}>
        <ScrollFix />
        {children}
      </body>
    </html>
  );
}

================================================================================
// FILE: src/app/metadata.ts
================================================================================

import type { Metadata } from "next";

export const metadata: Metadata = {
  title: "AsRealt Agency",
  description: "Description"
};


================================================================================
// FILE: src/app/page.module.css
================================================================================

.page {
  width: 100%;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  position: relative;
}

/* Main content styles */
.main {
  flex: 1;
  display: flex;
  flex-direction: column;
  position: relative;
  z-index: 1; /* Ensure content is above background */
}

/* Full-width image styles */
.fullWidthImageSection {
  width: 100%;
  padding: 0;
  display: flex;
  justify-content: center;
  overflow: hidden;
}

.imageContainer {
  max-width: 1400px;
  width: 100%;
  background-color: #20222B;
  position: relative;
}

.fullWidthImage {
  width: 100%;
  height: auto;
  display: block;
}

@media (max-width: 1400px) {
  .imageContainer {
    max-width: 100%;
  }
}

@media (max-width: 768px) {
  .fullWidthImageSection {
    height: auto;
  }
  
  .fullWidthImage {
    height: 300px;
    object-fit: cover;
  }
}

================================================================================
// FILE: src/app/page.tsx
================================================================================

'use client';

import React from "react";
import styles from "./page.module.css";
// Fix the import paths to match your file structure
import Header from "../components/Header/Header";
// Remove the bg image import since we're handling it in ClientBackground
// import bgImage from ".realty_app/bg1.jpg";
import HeroSection from "../components/HeroSection/HeroSection";
import AboutSection from "../components/AboutAgencySection/AboutAgencySection";
import PropertiesCarouselSection from "../components/PropertiesCarousel/PropertiesCarousel";
import AdvanegesSection from "../components/AdvantagesSection/AdvantagesSection";
import TeamSection from "../components/TeamSection/TeamSection";
import WorkStagesSection from "../components/WorkStagesSection/WorkStagesSection";
import TestimonialsCarousel from "../components/TestimonialsCarousel/TestimonialsCarousel";
import DocumentsSection from "../components/DocumentsSection/DocumentsSection";
import ContactForm from "../components/ContactForm/ContactForm";
import ContactsSection from "../components/ContactsSection/ContactsSection";
import Footer from "../components/Footer/Footer";

// Import your full-size image
import fullWidthImage from "./assets/Mask_group.png";

export default function Home() {
  return (
    <div className={styles.page}>
      {/* Remove the background div */}
      <main className={styles.main}>
        <Header />
        <HeroSection />
        <AboutSection />
        <PropertiesCarouselSection />
        <AdvanegesSection />
        <TeamSection />
        <WorkStagesSection />
        <section className={styles.fullWidthImageSection}>
         <div className={styles.imageContainer}>
           <img 
            src={fullWidthImage.src} 
            alt="Real Estate Development" 
            className={styles.fullWidthImage}
           />
        </div>
        </section>
        <TestimonialsCarousel />
        <DocumentsSection />
        <ContactForm />
        <ContactsSection />
        <Footer />
      </main>
    </div>
  );
}

================================================================================
// FILE: src/components/AboutAgencySection/AboutAgencySection.module.css
================================================================================

.aboutSection {
  width: 100%;
  padding: 0;
  display: flex;
  justify-content: center;
  color: white;
}

.container {
  max-width: 1400px;
  width: 100%;
  background-color: #20222B;
  padding: 60px 60px;
  position: relative;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 40px;
}

.title {
  font-size: 36px;
  font-weight: 400;
  margin: 0;
  scroll-margin-top: 300px;
}

.learnMore {
  display: flex;
  align-items: center;
  color: white;
  text-decoration: none;
  font-size: 14px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.arrow {
  margin-left: 10px;
  transition: transform 0.3s ease;
}

.learnMore:hover .arrow {
  transform: translateX(5px);
}

.content {
  display: flex;
  flex-direction: row; /* Horizontal layout for desktop */
  justify-content: space-between;
  align-items: flex-start;
}

.description {
  max-width: 60%;
}

.description p {
  font-size: 16px;
  line-height: 1.6;
  margin-bottom: 20px;
  font-weight: 300;
  color: rgba(255, 255, 255, 0.8);
}

.stats {
  display: flex;
  gap: 60px;
  align-items: flex-start;
}

.statItem {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.statNumber {
  font-size: 48px;
  font-weight: 300;
  color: #BA9778;
  margin-bottom: 8px;
}

.statText {
  font-size: 14px;
  line-height: 1.4;
  color: rgba(255, 255, 255, 0.8);
  max-width: 120px;
}

.mobileLearnMore {
  display: none; /* Hidden on desktop */
}

/* Media queries */
@media (max-width: 768px) {
  .container {
    padding: 40px 20px;
  }
  
  .header {
    flex-direction: column;
    align-items: flex-start;
    margin-bottom: 20px;
  }
  
  .title {
    font-size: 28px;
    margin-bottom: 10px;
  }
  
  .learnMore {
    display: none; /* Hide desktop learn more */
  }
  
  .content {
    flex-direction: column; /* Vertical layout for mobile */
  }
  
  .description {
    max-width: 100%;
    margin-bottom: 20px;
  }
  
  .description p {
    font-size: 15px;
    line-height: 1.5;
    margin-bottom: 15px;
  }
  
  .mobileLearnMore {
    display: flex; /* Show on mobile */
    align-items: center;
    color: white;
    text-decoration: none;
    font-size: 14px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 30px;
  }
  
  .mobileLearnMore .arrow {
    margin-left: 10px;
  }
  
  .stats {
    width: 100%;
    gap: 40px;
  }
  
  .statItem:last-child {
    display: none; /* Hide the third stat on mobile */
  }
  
  .statNumber {
    font-size: 36px;
  }
  
  .statText {
    font-size: 13px;
  }
}

================================================================================
// FILE: src/components/AboutAgencySection/AboutAgencySection.tsx
================================================================================

'use client';

import React from 'react';
import styles from './AboutAgencySection.module.css';

export default function AboutAgencySection() {
  return (
    <section className={styles.aboutSection}>
      <div className={styles.container}>
        <div className={styles.header}>
          <h2 className={styles.title}>О нашем агентстве</h2>
          <a href="/about-us" className={styles.learnMore}>
            УЗНАТЬ БОЛЬШЕ <span className={styles.arrow}>→</span>
          </a>
        </div>
        
        <div className={styles.content}>
          <div className={styles.description}>
            <p>
              Наше агентство недвижимости - это сочетание молодости и опыта. Несмотря на то, что мы новая компания, за нашими плечами более 15 лет успешной работы в сфере недвижимости.
            </p>
            <p>
              Мы предлагаем индивидуальный подход к каждому клиенту и гарантируем высокое качество услуг. Доверьтесь нам, и мы поможем вам сделать правильный выбор!
            </p>
          </div>
          
          <div className={styles.stats}>
            <div className={styles.statItem}>
              <span className={styles.statNumber}>15+</span>
              <span className={styles.statText}>лет опыта работы</span>
            </div>
            <div className={styles.statItem}>
              <span className={styles.statNumber}>2000+</span>
              <span className={styles.statText}>довольных клиентов</span>
            </div>
            {/* This one will be hidden on mobile */}
            <div className={`${styles.statItem} ${styles.hideOnMobile}`}>
              <span className={styles.statNumber}>250+</span>
              <span className={styles.statText}>обученных специалистов</span>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}

================================================================================
// FILE: src/components/AboutUsSection/AboutUsSection.module.css
================================================================================

.aboutSection {
  width: 100%;
  padding: 0;
  display: flex;
  justify-content: center;
  color: white;
  margin: 0;
  margin-top: -1px; /* Fix for the gap between sections */
}

.withHeaderPadding {
  padding-top: 100px; /* Increased padding to account for header height */
}

.container {
  max-width: 1400px;
  width: 100%;
  background-color: #20222B;
  padding: 60px 60px;
  position: relative;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 40px;
}

.title {
  font-size: 36px;
  font-weight: 400;
  margin: 0;
  color: #F5A623;
}

.subtitle {
  font-size: 18px;
  font-weight: 500;
  margin: 0 0 20px 0;
  color: rgba(255, 255, 255, 0.95);
  line-height: 1.4;
}

.content {
  display: flex;
  flex-direction: column;
  gap: 60px;
}

/* Main content section with founder image */
.mainContent {
  display: flex;
  justify-content: space-between;
  gap: 40px;
}

.textContent {
  flex: 1;
  max-width: 60%;
}

.bulletPoints {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.bulletPoints li {
  position: relative;
  padding-left: 20px;
  margin-bottom: 20px;
  font-size: 16px;
  line-height: 1.6;
  color: rgba(255, 255, 255, 0.8);
}

.bulletPoints li::before {
  content: "•";
  position: absolute;
  left: 0;
  color: #F5A623;
}

.founderImage {
  flex: 1;
  max-width: 35%;
  display: flex;
  justify-content: flex-end;
}

.image {
  width: 100%;
  height: auto;
  border-radius: 4px;
  object-fit: cover;
}

/* Team section */
.teamSection {
  display: flex;
  justify-content: space-between;
  gap: 40px;
}

.teamImage {
  flex: 1;
  max-width: 35%;
}

.teamDescription {
  flex: 1;
  max-width: 60%;
}

.paragraph {
  font-size: 16px;
  line-height: 1.6;
  margin-bottom: 20px;
  color: rgba(255, 255, 255, 0.8);
}

/* Gallery section */
.gallerySection {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 20px;
  margin-top: 20px;
}

.galleryItem {
  aspect-ratio: 1/1;
  overflow: hidden;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Media queries */
@media (max-width: 1400px) {
  .container {
    max-width: 100%;
  }
}

@media (max-width: 1200px) {
  .container {
    padding: 60px 40px;
  }
  
  .mainContent, 
  .teamSection {
    gap: 30px;
  }
}

@media (max-width: 992px) {
  .mainContent, 
  .teamSection {
    flex-direction: column;
  }
  
  .textContent,
  .founderImage,
  .teamImage,
  .teamDescription {
    max-width: 100%;
  }
  
  .founderImage,
  .teamImage {
    order: -1; /* Images appear before text on mobile */
  }
  
  .gallerySection {
    grid-template-columns: repeat(2, 1fr);
    gap: 15px;
  }
}

@media (max-width: 768px) {
  .container {
    padding: 40px 20px;
  }
  
  .header {
    flex-direction: column;
    align-items: flex-start;
    gap: 20px;
  }
  
  /* Fix gallery for mobile */
  .gallerySection {
    gap: 10px;
  }
}

@media (max-width: 480px) {
  /* Keep the gallery 2-column on smallest screens */
  .gallerySection {
    grid-template-columns: repeat(2, 1fr);
  }
}

================================================================================
// FILE: src/components/AboutUsSection/AboutUsSection.tsx
================================================================================

'use client';

import React from 'react';
import styles from './AboutUsSection.module.css';

export default function AboutUsSection() {
    return (
      <section className={styles.aboutSection}>
        <div className={styles.container} style={{ marginTop: "60px" }}>
          <div className={styles.header}>
            <h2 className={styles.title}>О нашем агентстве</h2>
          </div>
          
          <div className={styles.content}>
            <div className={styles.mainContent}>
              <div className={styles.textContent}>
                <h3 className={styles.subtitle}>Наша миссия Алексей Симченко - основатель &quot;Агентство AS недвижимости&quot;</h3>
                
                <ul className={styles.bulletPoints}>
                  <li>
                    В 2022 году специалист по недвижимости Алексей Симченко создает бизнес по оказанию риэлторских услуг на рынке города Минска.
                  </li>
                  <li>
                    Стабильное расширение компании и рост штата. Мы гордимся тем, что с нами работают только опытные и высококвалифицированные специалисты.
                  </li>
                  <li>
                    Наша компания заслужила статус надежного партнера, специализирующегося на оказании профессиональных консультаций и помощи в решении вопросов недвижимости.
                  </li>
                </ul>
              </div>
              
              <div className={styles.founderImage}>
              <img 
                  src="/realty_app/Alex2-1.jpg" 
                  alt="Команда агентства" 
                  className={styles.image}
                />
              </div>
            </div>
            
            <div className={styles.teamSection}>
              <div className={styles.teamImage}>
              <img 
                  src="/realty_app/group-1.jpg" 
                  alt="Команда агентства" 
                  className={styles.image}
                />
              </div>
              
              <div className={styles.teamDescription}>
                <h3 className={styles.subtitle}>
                  В январе 2023 года в состав семьи АН &quot;Агентство AS недвижимости&quot; входит новый партнер.
                </h3>
                <p className={styles.paragraph}>
                  История создания любого агентства – это всегда история о том, как человек или группа людей решили заниматься риэлтерской деятельностью. И у каждой такой истории есть свои особенности. Для нас это решение было вполне логичным продолжением нашей деятельности. Мы долгое время работали риэлторами в других компаниях, приобрели опыт и решили открыть свое агентство.
                </p>
                <p className={styles.paragraph}>
                  У нас за плечами большое количество успешных сделок и довольных клиентов. Поэтому мы знаем, как обеспечить для каждого клиента уровень сервиса, который даст максимальный комфорт при проведении сделок с недвижимостью. Важным принципом в нашей работе является профессионализм, который заключается в глубоком знании своего дела, ответственности и трудолюбии.
                </p>
                <p className={styles.paragraph}>
                  Мы не просто помогаем клиентам выбрать жилье или другую недвижимость, наша задача – отыскать для каждого клиента именно тот вариант, который лучше всего соответствует его потребностям и возможностям.
                </p>
              </div>
            </div>
            
            <div className={styles.gallerySection}>
              <div className={styles.galleryItem}>
              <img 
                  src="/realty_app/images/kv1-1.jpg" 
                  alt="Недвижимость пример 1" 
                  className={styles.image}
                />
              </div>
              <div className={styles.galleryItem}>
              <img 
                  src="/realty_app/images/kv2-1.jpg" 
                  alt="Недвижимость пример 2" 
                  className={styles.image}
                />
              </div>
              <div className={styles.galleryItem}>
              <img 
                  src="/realty_app/images/kv3-1.jpg" 
                  alt="Недвижимость пример 3" 
                  className={styles.image}
                />
              </div>
              <div className={styles.galleryItem}>
              <img 
                  src="/realty_app/kv4-1.jpg" 
                  alt="Logo" 
                  className={styles.image}
                />
              </div>
            </div>
          </div>
        </div>
      </section>
    );
  }

================================================================================
// FILE: src/components/AdvantagesSection/AdvantagesSection.module.css
================================================================================

.advantagesSection {
  width: 100%;
  padding: 0;
  display: flex;
  justify-content: center;
  color: white;
  margin: 0;
  margin-top: -1px;
}

.container {
  max-width: 1400px;
  width: 100%;
  background-color: #20222B;
  padding: 80px 60px;
  position: relative;
}

.title {
  font-size: 36px;
  font-weight: 400;
  margin-bottom: 60px;
  scroll-margin-top: 300px;
}

.advantagesGrid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 30px;
  position: relative;
}

/* Horizontal lines - desktop only */
@media (min-width: 769px) {
  .advantagesGrid::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background-color: rgba(255, 255, 255, 0.1);
  }

  .advantagesGrid::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    height: 1px;
    background-color: rgba(255, 255, 255, 0.1);
  }
}

/* Card styling */
.advantageCard {
  position: relative;
  padding: 30px;
}

/* Vertical and bottom lines - desktop only */
@media (min-width: 769px) {
  .advantageCard {
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .advantageCard::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    width: 1px;
    background-color: rgba(255, 255, 255, 0.1);
  }

  .advantageCard:nth-child(3n)::after,
  .advantageCard:last-child::after {
    display: none;
  }
}

.cardNumber {
  font-size: 18px;
  color: #BA9778;
  margin-bottom: 16px;
}

.cardTitle {
  font-size: 20px;
  font-weight: 500;
  margin-bottom: 16px;
}

.cardDescription {
  font-size: 14px;
  line-height: 1.6;
  color: rgba(255, 255, 255, 0.8);
}

@media (max-width: 1400px) {
  .container {
    max-width: 100%;
  }
}

@media (max-width: 1200px) {
  .container {
    padding: 60px 40px;
  }
}

@media (max-width: 1024px) {
  .advantagesGrid {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .advantageCard:nth-child(3n)::after {
    display: block;
  }
  
  .advantageCard:nth-child(2n)::after {
    display: none;
  }
  
  .advantagesGrid::after {
    top: calc(50% + 15px);
  }
}

@media (max-width: 768px) {
  .container {
    padding: 40px 20px;
  }
  
  .advantagesGrid {
    grid-template-columns: 1fr;
    gap: 35px;
  }
  
  /* Remove ALL borders and lines for mobile */
  .advantageCard {
    border: none !important;
    border-bottom: none !important;
    padding: 0;
    margin-bottom: 0;
    box-shadow: none !important;
  }
  
  .advantageCard::after,
  .advantageCard::before {
    display: none !important;
  }
  
  /* Add more space between mobile cards */
  .cardNumber {
    margin-bottom: 12px;
  }
  
  .cardTitle {
    font-size: 18px;
    margin-bottom: 12px;
  }
}

@media (max-width: 480px) {
  .container {
    padding: 30px 15px;
  }
  
  .title {
    font-size: 28px;
    margin-bottom: 40px;
  }
  
  .advantagesGrid {
    gap: 30px;
  }
}

================================================================================
// FILE: src/components/AdvantagesSection/AdvantagesSection.tsx
================================================================================

'use client';

import React from 'react';
import styles from './AdvantagesSection.module.css';

export default function AdvantagesSection() {
  const advantages = [
    {
      id: 1,
      number: '01',
      title: 'Уникальная система обучения',
      description: 'Мы разработали собственную программу подготовки, которая формирует высококлассных специалистов по недвижимости и риэлторов, обеспеченных профессионализм и компетентность.'
    },
    {
      id: 2,
      number: '02',
      title: 'Эффективная CRM система',
      description: 'Наша современная CRM система позволяет оптимизировать все процессы, связанные с покупкой и продажей недвижимости, обеспечивая оперативность и точность работы с клиентами.'
    },
    {
      id: 3,
      number: '03',
      title: 'Личный кабинет продавца',
      description: 'Мы предоставляем продавцам доступ к личному кабинету, где они могут в режиме реального времени видеть всю информацию о своей недвижимости, включая информацию о потенциальных покупателях и анализ рынка своего района.'
    },
    {
      id: 4,
      number: '04',
      title: 'Сочетание инноваций и практик',
      description: 'Мы гармонично сочетаем современные методики с проверенными практиками работы, что позволяет нам эффективно справляться с задачами любой сложности в сфере недвижимости.'
    },
    {
      id: 5,
      number: '05',
      title: 'Индивидуальный подход к клиентам',
      description: 'Мы уделяем внимание каждому клиенту, предлагая индивидуальные решения, которые максимально соответствуют его потребностям и ожиданиям.'
    },
    {
      id: 6,
      number: '06',
      title: 'Лояльные и гибкие договоры',
      description: 'Мы предлагаем нашим клиентам гибкие условия сотрудничества, адаптированные под их конкретные потребности, что делает процесс взаимодействия с нами максимально комфортным и прозрачным.'
    }
  ];

  return (
    <section id="advantages" className={styles.advantagesSection}>
      <div className={styles.container}>
        <h2 className={styles.title}>Преимущества</h2>
        
        <div className={styles.advantagesGrid}>
          {advantages.map((advantage) => (
            <div key={advantage.id} className={styles.advantageCard}>
              <div className={styles.cardNumber}>{advantage.number}</div>
              <h3 className={styles.cardTitle}>{advantage.title}</h3>
              <p className={styles.cardDescription}>{advantage.description}</p>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}

================================================================================
// FILE: src/components/CardCarousel/CardCarousel.module.css
================================================================================

.carouselSection {
  background-color: #20222B;
  color: white;
  padding: 60px 0;
  width: 100%;
}

.container {
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 30px;
}

.title {
  font-size: 36px;
  font-weight: 400;
  margin-bottom: 50px;
  scroll-margin-top: 300px;
}

.carouselContainer {
  position: relative;
  display: flex;
  align-items: center;
  margin-bottom: 30px;
}

.carousel {
  display: grid;
  gap: 24px;
  width: 100%;
  grid-template-columns: repeat(var(--items-per-view, 4), 1fr);
}

.navButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: 1px solid #BA9778;
  background: transparent;
  color: #BA9778;;
  font-size: 18px;
  cursor: pointer;
  transition: all 0.3s ease;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10;
}

.navButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.5);
}

.prevButton {
  left: -20px;
}

.nextButton {
  right: -20px;
}

.dotsContainer {
  display: flex;
  justify-content: center;
  gap: 8px;
  margin-top: 20px;
}

.dot {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.3);
  border: none;
  cursor: pointer;
  padding: 0;
  transition: all 0.3s ease;
}

.activeDot {
  background-color: #F5A623;
  transform: scale(1.2);
}

@media (max-width: 1200px) {
  .container {
    padding: 0 40px;
  }
}

@media (max-width: 968px) {
  .navButton {
    width: 40px;
    height: 40px;
  }
  
  .prevButton {
    left: -15px;
  }
  
  .nextButton {
    right: -15px;
  }
}

@media (max-width: 768px) {
  .carouselSection {
    padding: 40px 0;
  }
  
  .title {
    font-size: 28px;
    margin-bottom: 30px;
    text-align: left; /* Left align title on mobile */
  }
  
  .container {
    padding: 0;
  }
  
  .carouselContainer {
    padding: 0;
    margin-bottom: 20px;
  }
  
  /* Adjust the carousel to show one item per view properly */
  .carousel {
    gap: 0;
    grid-template-columns: 1fr;
  }
}

@media (max-width: 576px) {
  .navButton {
    width: 40px;
    height: 40px;
    top: 50%;
  }
  
  .prevButton {
    left: 10px;
  }
  
  .nextButton {
    right: 10px;.carouselSection {
      background-color: #20222B;
      color: white;
      padding: 60px 0;
      width: 100%;
    }
    
    .container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 0 30px;
    }
    
    .title {
      font-size: 36px;
      font-weight: 400;
      margin-bottom: 50px;
    }
    
    .carouselContainer {
      position: relative;
      display: flex;
      align-items: center;
      margin-bottom: 30px;
    }
    
    .carousel {
      display: grid;
      gap: 24px;
      width: 100%;
      grid-template-columns: repeat(var(--items-per-view, 4), 1fr);
    }
    
    .navButton {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      border: 1px solid #BA9778;
      background: transparent;
      color: #BA9778;
      font-size: 18px;
      cursor: pointer;
      transition: all 0.3s ease;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      z-index: 10;
    }
    
    .navButton:hover {
      background-color: rgba(255, 255, 255, 0.1);
      border-color: rgba(255, 255, 255, 0.5);
    }
    
    .prevButton {
      left: -20px;
    }
    
    .nextButton {
      right: -20px;
    }
    
    .dotsContainer {
      display: flex;
      justify-content: center;
      gap: 8px;
      margin-top: 20px;
    }
    
    .dot {
      width: 10px;
      height: 10px;
      border-radius: 50%;
      background-color: rgba(255, 255, 255, 0.3);
      border: none;
      cursor: pointer;
      padding: 0;
      transition: all 0.3s ease;
    }
    
    .activeDot {
      background-color: #F5A623;
      transform: scale(1.2);
    }
    
    @media (max-width: 1200px) {
      .container {
        padding: 0 40px;
      }
    }
    
    @media (max-width: 968px) {
      .navButton {
        width: 40px;
        height: 40px;
      }
      
      .prevButton {
        left: -15px;
      }
      
      .nextButton {
        right: -15px;
      }
    }
    
    @media (max-width: 768px) {
      .carouselSection {
        padding: 40px 0;
      }
      
      .title {
        font-size: 28px;
        margin-bottom: 30px;
        text-align: left;
      }
      
      .container {
        padding: 0;
      }
      
      .carouselContainer {
        padding: 0;
        margin-bottom: 20px;
      }
      
      /* Adjust the carousel to show one item per view properly */
      .carousel {
        gap: 0;
        grid-template-columns: 1fr;
      }
    }
    
    @media (max-width: 576px) {
      .navButton {
        width: 40px;
        height: 40px;
        top: 50%;
      }
      
      .prevButton {
        left: 10px;
      }
      
      .nextButton {
        right: 10px;
      }
    }
    
    /* Center card on mobile to match Figma */
    @media (max-width: 768px) {
      .carousel > * {
        margin: 0 auto;
        width: 100%;
        max-width: 85%;
      }
    }
  }
}

/* Center card on mobile to match Figma */
@media (max-width: 768px) {
  .carousel > * {
    margin: 0 auto;
    width: 100%;
    max-width: 85%; /* Match Figma width proportion */
  }
}

================================================================================
// FILE: src/components/CardCarousel/CardCarousel.tsx
================================================================================

'use client';

import React, { useState, ReactNode, useEffect } from 'react';
import styles from './CardCarousel.module.css';

interface CardCarouselProps {
  title: string;
  children: ReactNode[];
  itemsPerView?: number;
  className?: string;
  showDots?: boolean;
}

const CardCarousel: React.FC<CardCarouselProps> = ({ 
  title, 
  children,
  itemsPerView: defaultItemsPerView = 4,
  className = '',
  showDots = true
}) => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [itemsPerView, setItemsPerView] = useState(defaultItemsPerView);
  
  // Update items per view based on screen size
  useEffect(() => {
    const handleResize = () => {
      if (window.innerWidth <= 576) {
        setItemsPerView(1);
      } else if (window.innerWidth <= 968) {
        setItemsPerView(2);
      } else if (window.innerWidth <= 1200) {
        setItemsPerView(3);
      } else {
        setItemsPerView(defaultItemsPerView);
      }
    };
    
    // Set initial value
    handleResize();
    
    // Add event listener
    window.addEventListener('resize', handleResize);
    
    // Clean up
    return () => {
      window.removeEventListener('resize', handleResize);
    };
  }, [defaultItemsPerView]);
  
  // Calculate total slides based on children and items per view
  const totalItems = React.Children.count(children);
  const maxStartIndex = Math.max(0, totalItems - itemsPerView);
  
  // Handle navigation
  const prevSlide = () => {
    setCurrentIndex(prevIndex => 
      prevIndex <= 0 ? maxStartIndex : prevIndex - 1
    );
  };
  
  const nextSlide = () => {
    setCurrentIndex(prevIndex => 
      prevIndex >= maxStartIndex ? 0 : prevIndex + 1
    );
  };
  
  // Get visible items
  const visibleItems = React.Children.toArray(children).slice(
    currentIndex,
    currentIndex + itemsPerView
  );

  // Calculate the number of dots needed
  const numberOfDots = totalItems - itemsPerView + 1;

  return (
    <section id="specialists" className={`${styles.carouselSection} ${className}`}>
      <div className={styles.container}>
        <h2 className={styles.title}>{title}</h2>
        
        <div className={styles.carouselContainer}>
          <button 
            className={`${styles.navButton} ${styles.prevButton}`}
            onClick={prevSlide}
            aria-label="Previous items"
          >
            ←
          </button>
          
          <div 
            className={styles.carousel}
            style={{ '--items-per-view': itemsPerView } as React.CSSProperties}
          >
            {visibleItems}
          </div>
          
          <button 
            className={`${styles.navButton} ${styles.nextButton}`}
            onClick={nextSlide}
            aria-label="Next items"
          >
            →
          </button>
        </div>
        
        {showDots && numberOfDots > 1 && (
          <div className={styles.dotsContainer}>
            {Array.from({ length: numberOfDots }).map((_, index) => (
              <button
                key={index}
                className={`${styles.dot} ${currentIndex === index ? styles.activeDot : ''}`}
                onClick={() => setCurrentIndex(index)}
                aria-label={`Go to slide ${index + 1}`}
              />
            ))}
          </div>
        )}
      </div>
    </section>
  );
};

export default CardCarousel;

================================================================================
// FILE: src/components/ContactForm/ContactForm.module.css
================================================================================

.contactFormSection {
  width: 100%;
  padding: 0;
  display: flex;
  justify-content: center;
  color: white;
  margin: 0; /* Added explicit margin */
  margin-top: -1px; /* Fix for the gap between sections */
}

.container {
  max-width: 1400px;
  width: 100%;
  background-color: #20222B;
  padding: 80px 60px;
  position: relative;
}

.title {
  font-size: 36px;
  font-weight: 400;
  margin-bottom: 16px;
  scroll-margin-top: 300px;
}

.subtitle {
  font-size: 16px;
  line-height: 1.6;
  color: rgba(255, 255, 255, 0.8);
  margin-bottom: 40px;
}

.form {
  display: flex;
  gap: 20px;
  margin-bottom: 20px;
  align-items: flex-start;
}

.inputGroup {
  position: relative;
  flex: 1;
  max-width: 400px;
}

.input {
  width: 100%;
  background-color: transparent;
  border: none;
  padding: 10px 0;
  font-size: 16px;
  color: white;
  outline: none;
}

.input::placeholder {
  color: rgba(255, 255, 255, 0.6);
}

.inputLine {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 1px;
  background-color: rgba(255, 255, 255, 0.3);
}

.inputError {
  color: #ff6b6b;
}

.inputLineError {
  background-color: #ff6b6b;
}

.submitButton {
  padding: 15px 20px;
  background-color: #cbb18b;
  color: #222;
  border: none;
  cursor: pointer;
  font-size: 16px;
  font-weight: 500;
  transition: background-color 0.3s;
  width: 260px;
  text-align: center;
}

.submitButton:hover {
  background-color: #d9c09b;
}

.agreementCheckbox {
  margin-top: 20px;
}

.checkboxLabel {
  display: flex;
  align-items: center;
  cursor: pointer;
}

.checkboxInput {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.customCheckbox {
  position: relative;
  display: inline-block;
  width: 20px;
  height: 20px;
  border: 1px solid rgba(255, 255, 255, 0.3);
  margin-right: 10px;
}

.checkboxInput:checked ~ .customCheckbox:after {
  content: "";
  position: absolute;
  top: 2px;
  left: 6px;
  width: 5px;
  height: 10px;
  border: solid #cbb18b;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

.checkboxError {
  border-color: #ff6b6b;
}

.checkboxText {
  font-size: 14px;
  color: rgba(255, 255, 255, 0.7);
}

@media (max-width: 1400px) {
  .container {
    max-width: 100%;
  }
}

@media (max-width: 1200px) {
  .container {
    padding: 60px 40px;
  }
}

@media (max-width: 900px) {
  .container {
    padding: 50px 30px;
  }
  
  .form {
    flex-direction: column;
    gap: 30px;
  }
  
  .inputGroup {
    max-width: 100%;
  }
  
  .submitButton {
    width: 100%;
  }
}

@media (max-width: 600px) {
  .container {
    padding: 40px 20px;
  }
}

================================================================================
// FILE: src/components/ContactForm/ContactForm.tsx
================================================================================

'use client';

import React, { useState } from 'react';
import styles from './ContactForm.module.css';

export default function ContactForm() {
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    agreementChecked: false
  });
  
  const [formErrors, setFormErrors] = useState({
    name: false,
    phone: false,
    agreement: false
  });
  
  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value, type, checked } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value
    }));
    
    // Clear error when user starts typing
    if (formErrors[name as keyof typeof formErrors]) {
      setFormErrors(prev => ({
        ...prev,
        [name]: false
      }));
    }
  };
  
  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    // Validate form
    const errors = {
      name: formData.name.trim() === '',
      phone: formData.phone.trim() === '',
      agreement: !formData.agreementChecked
    };
    
    setFormErrors(errors);
    
    // If no errors, submit form
    if (!errors.name && !errors.phone && !errors.agreement) {
      console.log('Form submitted:', formData);
      // Here you would typically send data to your server
      alert('Заявка отправлена успешно!');
      
      // Reset form
      setFormData({
        name: '',
        phone: '',
        agreementChecked: false
      });
    }
  };

  return (
    <section id="form" className={styles.contactFormSection}>
      <div className={styles.container}>
        <h2 className={styles.title}>Оставьте заявку</h2>
        <p className={styles.subtitle}>
          Мы ответим на все интересующие вопросы и поможем<br />
          в любых даже самых сложных случаях
        </p>
        
        <form className={styles.form} onSubmit={handleSubmit}>
          <div className={styles.inputGroup}>
            <input
              type="text"
              name="name"
              value={formData.name}
              onChange={handleChange}
              placeholder="Ваше имя"
              className={`${styles.input} ${formErrors.name ? styles.inputError : ''}`}
            />
            <div className={`${styles.inputLine} ${formErrors.name ? styles.inputLineError : ''}`}></div>
          </div>
          
          <div className={styles.inputGroup}>
            <input
              type="tel"
              name="phone"
              value={formData.phone}
              onChange={handleChange}
              placeholder="Ваш телефон"
              className={`${styles.input} ${formErrors.phone ? styles.inputError : ''}`}
            />
            <div className={`${styles.inputLine} ${formErrors.phone ? styles.inputLineError : ''}`}></div>
          </div>
          
          <button type="submit" className={styles.submitButton}>
            Отправить заявку
          </button>
        </form>
        
        <div className={styles.agreementCheckbox}>
          <label className={styles.checkboxLabel}>
            <input
              type="checkbox"
              name="agreementChecked"
              checked={formData.agreementChecked}
              onChange={handleChange}
              className={styles.checkboxInput}
            />
            <span className={`${styles.customCheckbox} ${formErrors.agreement ? styles.checkboxError : ''}`}></span>
            <span className={styles.checkboxText}>
              Я соглашаюсь с обработкой персональных данных
            </span>
          </label>
        </div>
      </div>
    </section>
  );
}


================================================================================
// FILE: src/components/ContactsSection/ContactsSection.module.css
================================================================================

.contactsSection {
  width: 100%;
  padding: 0;
  display: flex;
  justify-content: center;
  color: white;
  margin: 0; /* Added explicit margin */
  margin-top: -1px; /* Fix for the gap between sections */

}

.container {
  max-width: 1400px;
  width: 100%;
  background-color: #20222B;
  padding: 80px 60px;
  position: relative;
}

.title {
  font-size: 36px;
  font-weight: 400;
  margin-bottom: 40px;
  text-align: center;
  scroll-margin-top: 300px;
}

.contactsContent {
  display: flex;
  justify-content: space-between;
  gap: 40px;
  align-items: flex-start;
}

.mapContainer {
  flex: 1;
  max-width: 600px;
}

.mapPlaceholder {
  width: 100%;
  height: 400px;
  background-color: #f0f0f0;
  color: #333;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
  font-style: italic;
}

.contactInfo {
  flex: 1;
  max-width: 500px;
  display: flex;
  flex-direction: column;
  gap: 30px;
}

.infoBlock {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.infoTitle {
  font-size: 16px;
  font-weight: 500;
  color: #cbb18b;
  margin: 0;
}

.infoText {
  font-size: 16px;
  line-height: 1.5;
  margin: 0;
  color: rgba(255, 255, 255, 0.9);
}

.infoLink {
  color: rgba(255, 255, 255, 0.9);
  text-decoration: none;
  transition: color 0.3s;
}

.infoLink:hover {
  color: #cbb18b;
}

.googleMap {
  width: 100%;
  height: 400px;
  border: none;
}

@media (max-width: 1400px) {
  .container {
    max-width: 100%;
  }
}

@media (max-width: 1200px) {
  .container {
    padding: 60px 40px;
  }
}

@media (max-width: 900px) {
  .container {
    padding: 50px 30px;
  }
  
  .contactsContent {
    flex-direction: column;
    align-items: center;
  }
  
  .mapContainer {
    width: 100%;
    max-width: 100%;
  }
  
  .contactInfo {
    width: 100%;
    max-width: 100%;
  }
}

@media (max-width: 600px) {
  .container {
    padding: 40px 20px;
  }
}

================================================================================
// FILE: src/components/ContactsSection/ContactsSection.tsx
================================================================================

'use client';

import React from 'react';
import styles from './ContactsSection.module.css';

export default function ContactsSection() {
  return (
    <section id="contacts" className={styles.contactsSection}>
      <div className={styles.container}>
        <h2 className={styles.title}>Контакты</h2>
        
        <div className={styles.contactsContent}>
          <div className={styles.mapContainer}>
            {/* Map placeholder - replace with actual Google Maps embed code or component */}
            <div className={styles.mapContainer}>
                <iframe 
                    src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2350.394428302704!2d27.5519!3d53.9045!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zNTPCsDU0JzE2LjIiTiAyN8KwMzMnMDYuOCJF!5e0!3m2!1sen!2sby!4v1616593424796!5m2!1sen!2sby" 
                    width="100%" 
                    height="400" 
                    style={{ border: 0 }} 
                    allowFullScreen={true} 
                    loading="lazy"
                    title="Карта"
                    className={styles.googleMap}
                ></iframe>
                </div>
          </div>
          
          <div className={styles.contactInfo}>
            <div className={styles.infoBlock}>
              <h3 className={styles.infoTitle}>АДРЕС:</h3>
              <p className={styles.infoText}>
                г.Минск, ул.Немига, д.40, этаж 5,<br />
                пом.16, офис 511
              </p>
            </div>
            
            <div className={styles.infoBlock}>
              <h3 className={styles.infoTitle}>ТЕЛЕФОН:</h3>
              <p className={styles.infoText}>
                Ресепшен: <a href="tel:+375445630206" className={styles.infoLink}>+375 (44) 563-02-06</a>
              </p>
            </div>
            
            <div className={styles.infoBlock}>
              <h3 className={styles.infoTitle}>НАША ПОЧТА:</h3>
              <p className={styles.infoText}>
                <a href="mailto:asrealt@mail.ru" className={styles.infoLink}>asrealt@mail.ru</a>
              </p>
            </div>
            
            <div className={styles.infoBlock}>
              <h3 className={styles.infoTitle}>ИНСТАГРАМ:</h3>
              <p className={styles.infoText}>
                <a href="https://instagram.com/asrealt" className={styles.infoLink}>@asrealt</a>
              </p>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}

================================================================================
// FILE: src/components/DocumentsSection/DocumentsSection.module.css
================================================================================

.documentsSection {
  width: 100%;
  padding: 0;
  display: flex;
  justify-content: center;
  color: white;
  margin: 0; /* Added explicit margin */
  margin-top: -1px; /* Fix for the gap between sections */

}

.container {
  max-width: 1400px;
  width: 100%;
  background-color: #20222B;
  padding: 80px 60px;
  position: relative;
}

.title {
  font-size: 36px;
  font-weight: 400;
  margin-bottom: 40px;
  scroll-margin-top: 300px;
}

.documentsList {
  display: flex;
  flex-direction: column;
}

.documentItem {
  display: flex;
  justify-content: space-between;
  padding: 20px 0;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.documentItem:last-child {
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.documentInfo {
  display: flex;
  align-items: flex-start;
  gap: 16px;
}

.downloadIcon {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  border: 1px solid #BA9778;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.3s;
}

.downloadIcon svg {
  stroke: #BA9778;
  transition: stroke 0.3s;
}

.downloadIcon:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.downloadIcon:hover svg {
  stroke: white;
}

.documentDetails {
  display: flex;
  flex-direction: column;
}

.documentTitle {
  font-size: 18px;
  font-weight: 500;
  margin: 0 0 8px 0;
}

.documentFormat {
  font-size: 14px;
  color: rgba(255, 255, 255, 0.6);
  margin: 0;
}

.documentMeta {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  text-align: right;
}

.documentDate {
  font-size: 14px;
  margin: 0 0 8px 0;
}

.documentOrg {
  font-size: 14px;
  color: rgba(255, 255, 255, 0.6);
  margin: 0;
}

.downloadLink {
  text-decoration: none;
  color: inherit;
}

@media (max-width: 1400px) {
  .container {
    max-width: 100%;
  }
}

@media (max-width: 1200px) {
  .container {
    padding: 60px 40px;
  }
}

@media (max-width: 768px) {
  .container {
    padding: 40px 20px;
  }
  
  .documentItem {
    flex-direction: column;
    gap: 16px;
  }
  
  .documentMeta {
    align-items: flex-start;
    text-align: left;
  }
}

================================================================================
// FILE: src/components/DocumentsSection/DocumentsSection.tsx
================================================================================

'use client';

import React from 'react';
import styles from './DocumentsSection.module.css';

interface Document {
  id: number;
  title: string;
  fileFormat: string;
  fileSize: string;
  date: string;
  organization: string;
  downloadUrl: string;
}

export default function DocumentsSection() {
  const documents: Document[] = [
    {
      id: 1,
      title: 'Проектная декларация 77-002245',
      fileFormat: 'PDF',
      fileSize: '630.35 KB',
      date: '09.01.2024 года',
      organization: 'Частное предприятие "Агентство недвижимости"',
      downloadUrl: '#'
    },
    {
      id: 2,
      title: 'Проектная декларация 77-002245',
      fileFormat: 'PDF',
      fileSize: '630.35 KB',
      date: '09.01.2024 года',
      organization: 'Частное предприятие "Агентство недвижимости"',
      downloadUrl: '#'
    },
    {
      id: 3,
      title: 'Проектная декларация 77-002245',
      fileFormat: 'PDF',
      fileSize: '630.35 KB',
      date: '09.01.2024 года',
      organization: 'Частное предприятие "Агентство недвижимости"',
      downloadUrl: '#'
    }
  ];

  return (
    <section id="docs" className={styles.documentsSection}>
      <div className={styles.container}>
        <h2 className={styles.title}>Наши документы</h2>
        
        <div className={styles.documentsList}>
          {documents.map(document => (
            <div key={document.id} className={styles.documentItem}>
              <div className={styles.documentInfo}>
                <a href={document.downloadUrl} className={styles.downloadLink}>
                  <div className={styles.downloadIcon}>
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M12 16L12 8" stroke="#636363" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
                      <path d="M9 13L12 16L15 13" stroke="#636363" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
                      <path d="M3 15V16C3 18.2091 4.79086 20 7 20H17C19.2091 20 21 18.2091 21 16V15" stroke="#636363" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
                    </svg>
                  </div>
                </a>
                <div className={styles.documentDetails}>
                  <h3 className={styles.documentTitle}>{document.title}</h3>
                  <p className={styles.documentFormat}>
                    {document.fileFormat}, {document.fileSize}
                  </p>
                </div>
              </div>
              <div className={styles.documentMeta}>
                <p className={styles.documentDate}>{document.date}</p>
                <p className={styles.documentOrg}>{document.organization}</p>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}

================================================================================
// FILE: src/components/Footer/Footer.module.css
================================================================================

.footer {
  background-color: #20222B;
  color: white;
  padding: 50px 0 51px; /* Added 1px to bottom padding to fix the gap */
  width: 100%;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  margin: 0;
  margin-top: -1px;
  position: relative; /* Add positioning context */
}

.footer::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 1px;
  background-color: #20222B; /* Match the footer background color */
}

.container {
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 60px;
}

.footerContent {
  display: flex;
  justify-content: space-around;
  align-items: flex-start;
}

.leftSection {
  display: flex;
  align-items: flex-start;
  gap: 20px;
}

.logoContainer {
  width: 50px;
  height: 50px;
}

.logo {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.agencyInfo {
  display: flex;
  flex-direction: column;
}

.agencyName {
  font-size: 14px;
  margin: 0;
  line-height: 1.3;
  color: #BA9778;
}

.agencyName:first-child {
  font-weight: 600;
}

.agencyName:nth-child(2) {
  margin-bottom: 20px;
}

.agencySlogan {
  font-size: 14px;
  color: rgba(255, 255, 255, 0.8);
  margin: 0;
  line-height: 1.5;
}

.agencyPhone {
  font-size: 16px;
  color: #BA9778;
  text-decoration: none;
  margin-top: 15px;
  display: inline-block;
}

.footerNav {
  display: flex;
  gap: 60px;
}

.navColumn {
  display: flex;
  flex-direction: column;
  gap: 15px;
}

.navLink {
  color: white;
  text-decoration: none;
  font-size: 14px;
  transition: color 0.3s;
}

.navLink:hover {
  color: #BA9778;
}

@media (max-width: 992px) {
  .container {
    padding: 0 40px;
  }
  
  .footerNav {
    gap: 40px;
  }
}

@media (max-width: 768px) {
  .footer {
    padding: 40px 0 41px; /* Keep the extra 1px on bottom */
  }
  
  .container {
    padding: 0 20px;
  }
  
  .footerContent {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .leftSection {
    margin-bottom: 40px;
  }
  
  .logoContainer {
    width: 40px;
    height: 40px;
  }
  
  .footerNav {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 30px 60px;
    width: 100%;
  }
  
  .navColumn {
    width: 100%;
  }
}

@media (max-width: 480px) {
  .footerNav {
    gap: 20px 40px;
  }
}

================================================================================
// FILE: src/components/Footer/Footer.tsx
================================================================================

'use client';

import React, { useEffect, useState } from 'react';
import Link from 'next/link';
import { usePathname } from 'next/navigation';
import styles from './Footer.module.css';

export default function Footer() {
  const [isMobile, setIsMobile] = useState(false);
  const pathname = usePathname();

  // Handle link click with direct scrolling
  const handleLinkClick = (e: React.MouseEvent<HTMLAnchorElement>, id: string) => {
    e.preventDefault();
    
    // If we're on a different page, let the browser navigate with the hash
    if (pathname !== '/') {
      window.location.href = `/${id}`;
      return;
    }
    
    // If we're on the home page, scroll directly
    const section = document.getElementById(id);
    if (!section) return;
    
    const headerHeight = window.innerWidth <= 768 ? 90 : 70;
    const extraPadding = 20;
    
    const y = section.getBoundingClientRect().top + window.scrollY - (headerHeight + extraPadding);
    
    window.scrollTo({
      top: y,
      behavior: 'smooth'
    });
    
    // Update URL without triggering a scroll
    window.history.pushState(null, '', `#${id}`);
  };

  useEffect(() => {
    const handleResize = () => {
      setIsMobile(window.innerWidth <= 768);
    };
    
    // Set initial value
    handleResize();
    
    // Add event listener
    window.addEventListener('resize', handleResize);
    
    // Cleanup
    return () => {
      window.removeEventListener('resize', handleResize);
    };
  }, []);

  return (
    <footer className={styles.footer}>
      <div className={styles.container}>
        <div className={styles.footerContent}>
          {/* Left side - Logo and agency info */}
          <div className={styles.leftSection}>
            <div className={styles.logoContainer}>
              <img src="/realty_app/logo-fixed.svg" alt="Логотип агентства" className={styles.logo} />
            </div>
            <div className={styles.agencyInfo}>
              <p className={styles.agencyName}>АГЕНТСТВО</p>
              <p className={styles.agencyName}>недвижимости</p>
              <p className={styles.agencySlogan}>Агентство AS недвижимости</p>
              <p className={styles.agencySlogan}>Вместе мы сможем больше!</p>
              {isMobile && (
                <a href="tel:+375445630206" className={styles.agencyPhone}>+375 (44) 563-02-06</a>
              )}
            </div>
          </div>

          {/* Right side - Navigation links */}
          <nav className={styles.footerNav}>
            <div className={styles.navColumn}>
              <Link href="/about-us" className={styles.navLink}>
                Об агентстве
              </Link>
              
              <a 
                href="#properties" 
                className={styles.navLink}
                onClick={(e) => handleLinkClick(e, 'properties')}
              >
                Наши объекты
              </a>
              
              <a 
                href="#advantages"
                className={styles.navLink}
                onClick={(e) => handleLinkClick(e, 'advantages')}
              >
                Преимущества
              </a>
              
              <a 
                href="#specialists"
                className={styles.navLink}
                onClick={(e) => handleLinkClick(e, 'specialists')}
              >
                Специалисты
              </a>
            </div>
            <div className={styles.navColumn}>
            <a 
                href="#stages"
                className={styles.navLink}
                onClick={(e) => handleLinkClick(e, 'stages')}
              >
                Этапы работы
              </a>
              
              <a 
                href="#testimonials"
                className={styles.navLink}
                onClick={(e) => handleLinkClick(e, 'testimonials')}
              >
                Отзывы
              </a>
              
              <a 
                href="#form"
                className={styles.navLink}
                onClick={(e) => handleLinkClick(e, 'form')}
              >
                Форма заявки
              </a>
              
              <a 
                href="#contacts"
                className={styles.navLink}
                onClick={(e) => handleLinkClick(e, 'contacts')}
              >
                Контакты
              </a>
            </div>
          </nav>
        </div>
      </div>
    </footer>
  );
}

================================================================================
// FILE: src/components/Header/Header.module.css
================================================================================

.header {
  background: #20222B;
  color: white;
  padding: 16px 0;
  position: fixed;
  width: 100%;
  top: 0;
  left: 0;
  z-index: 1000;
}

.container {
  max-width: 1961px;
  margin: 0 auto;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 60px;
}

.logo {
  display: flex;
  align-items: center;
  z-index: 1001;
}

.nav {
  display: flex;
  gap: 24px;
  margin: 0 auto;
}

.nav a {
  color: white;
  text-decoration: none;
  font-size: 14px;
  font-weight: 300;
  transition: color 0.3s ease;
  letter-spacing: 0.5px;
  opacity: 0.8;
}

.nav a:hover {
  color: #F5A623;
  opacity: 1;
}

.contact {
  font-size: 18px;
  font-weight: 500;
}

.contact a {
  color: white;
  text-decoration: none;
}

.mobileContact {
  display: none; /* Hide on desktop */
}

.mobileMenu {
  display: none;
  z-index: 1001;
}

.mobileMenu button {
  background: none;
  border: none;
  color: #BA9778;
  font-size: 24px;
  cursor: pointer;
}

.mobileLoginLink {
  display: none;
}

/* Hide mobile-only elements on desktop */
.mobileOnlyLinks {
  display: none;
}

/* Hide navFooter on desktop */
.navFooter {
  display: none;
}

.navLogo {
  display: none;
}

.navTitle {
  display: none;
}

.navSubtitle {
  display: none;
}

.navPhone {
  display: none;
}

.nav a.active {
  color: #F5A623 !important;
  opacity: 1 !important;
}

/* Add a subtle indicator for active items */
.nav a {
  position: relative;
}

.nav a.active::after {
  content: '';
  position: absolute;
  bottom: -4px;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: #F5A623;
  transform: scaleX(1);
  transition: transform 0.3s ease;
}

.nav a:not(.active)::after {
  content: '';
  position: absolute;
  bottom: -4px;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: #F5A623;
  transform: scaleX(0);
  transition: transform 0.3s ease;
}

.nav a:hover::after {
  transform: scaleX(1);
}

@media (max-width: 1400px) {
  .container {
    max-width: 100%;
  }
}

@media (max-width: 1200px) {
  .container {
    padding: 0 40px;
  }
}

@media (max-width: 768px) {
  .header{
    height: 60px;
    padding-top: 28px;
  }
  .container {
    padding: 0 20px;
    position: relative;
  }
  
  /* Top logo in header */
  .container > .logo {
    display: flex;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
  }
  
  /* Only hide the top logo when nav is open */
  .navOpen ~ .logo,
  .navOpen + .logo {
    display: none;
  }
  
  .logo img {
    width: 50px;
    height: auto;
  }
  
  .nav {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background: #20222B;
    flex-direction: column;
    padding: 10px 24px 24px;
    align-items: flex-start;
    gap: 0px;
    transform: translateX(-100%);
    transition: transform 0.3s ease;
    z-index: 1000;
    display: flex;
    justify-content: flex-start;
  }
  
  .navOpen {
    transform: translateX(0);
  }
  
  
  .nav a {
    font-size: 16px;
    padding: 8px 0;
  }
  
  /* Show mobile-only links on mobile */
  .mobileOnlyLinks {
    display: contents;
  }
  
  /* Show navFooter on mobile */
  .navFooter {
    display: flex;
    margin-top: auto;
    flex-direction: column;
    align-items: center;
    width: 100%;
    padding-top: 40px; /* Already set to 0px, which is good */
    padding-bottom: 30px; /* Increase bottom padding to move content up */
    margin-top: -1px; /* This will move the footer up by 30px */
  }
  
  /* Make the navLogo visible in mobile menu */
  .navLogo {
    display: block;
    margin-bottom: 15px;
  }
  
  .navTitle {
    display: flex;
    font-size: 24px;
    font-weight: 400;
    color: white;
    flex-direction: column;
    align-items: center;
    text-transform: uppercase;
    margin-bottom: 15px;
    line-height: 1.1;
  }
  
  .navSubtitle {
    display: block;
    font-size: 20px;
    font-weight: 400;
  }
  
  .navPhone {
    display: block;
    margin-top: 5px;
  }
  
  .navPhone a {
    color: white;
    text-decoration: none;
    font-size: 14px;
    opacity: 0.8;
    padding: 0;
  }
  
  .mobileMenu {
    display: block;
    position: absolute;
    right: 20px;
  }
  
  .contact {
    display: none;
  }
  
  .mobileContact {
    display: block;
    margin-top: 20px;
  }
  
  .mobileLoginLink {
    display: block;
    position: absolute;
    left: 20px;
    font-size: 14px;
    opacity: 0.8;
  }
  
  .mobileLoginLink a {
    color: white;
    text-decoration: none;
  }

  .navOpen a.active::after {
    width: 30px;
  }
}

================================================================================
// FILE: src/components/Header/Header.tsx
================================================================================

'use client';

import React, { useState, useEffect } from "react";
import Link from "next/link";
import { usePathname } from 'next/navigation';
import styles from "./Header.module.css";

const Header = () => {
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const pathname = usePathname();

  const toggleMobileMenu = () => {
    setMobileMenuOpen(!mobileMenuOpen);
  };

  // Close menu when clicking outside and prevent body scroll when menu is open
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      // If menu is open and clicked outside nav and not on menu button
      if (mobileMenuOpen) {
        const nav = document.querySelector(`.${styles.nav}`);
        const mobileMenuButton = document.querySelector(`.${styles.mobileMenu} button`);
        
        if (nav && !nav.contains(event.target as Node) && 
            mobileMenuButton && !mobileMenuButton.contains(event.target as Node)) {
          setMobileMenuOpen(false);
        }
      }
    };

    // Prevent body scroll when menu is open
    if (mobileMenuOpen) {
      document.body.style.overflow = 'hidden';
    } else {
      document.body.style.overflow = 'auto';
    }

    document.addEventListener('mousedown', handleClickOutside);
    
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
      document.body.style.overflow = 'auto'; // Reset on unmount
    };
  }, [mobileMenuOpen]);

  // Handle link click with direct scrolling
  const handleLinkClick = (e: React.MouseEvent<HTMLAnchorElement>, id: string) => {
    e.preventDefault();
    setMobileMenuOpen(false);
    
    // If we're on a different page, let the browser navigate with the hash
    if (pathname !== '/realty_app') {
      window.location.href = `/realty_app/#${id}`;
      return;
    }
    
    // If we're on the home page, scroll directly
    const section = document.getElementById(id);
    if (!section) return;
    
    const headerHeight = window.innerWidth <= 768 ? 90 : 70;
    const extraPadding = 20;
    
    const y = section.getBoundingClientRect().top + window.scrollY - (headerHeight + extraPadding);
    
    window.scrollTo({
      top: y,
      behavior: 'smooth'
    });
    
    // Update URL without triggering a scroll
    window.history.pushState(null, '', `#${id}`);
  };

  return (
    <header className={styles.header}>
      <div className={styles.container}>
        {/* Mobile Menu Button */}
        <div className={styles.mobileMenu}>
          <button onClick={toggleMobileMenu} aria-label="Toggle menu">
            {mobileMenuOpen ? "✕" : "☰"}
          </button>
        </div>

        {/* Logo with Link to Main Page */}
        <div className={styles.logo} style={{ display: mobileMenuOpen ? 'none' : 'flex' }}>
          <Link href="/">
            <img src="/realty_app/logo-fixed.svg" alt="Logo" width="78" height="74" />
          </Link>
        </div>

        {/* Navigation Links */}
        <nav className={`${styles.nav} ${mobileMenuOpen ? styles.navOpen : ''}`}>
          <Link href="/about-us" onClick={() => setMobileMenuOpen(false)}>О нас</Link>
          
          <a href="#properties" onClick={(e) => handleLinkClick(e, 'properties')}>
            Наши объекты
          </a>
          
          <a href="#advantages" onClick={(e) => handleLinkClick(e, 'advantages')}>
            Преимущества
          </a>
          
          <a href="#specialists" onClick={(e) => handleLinkClick(e, 'specialists')}>
            Специалисты
          </a>
          
          {/* Mobile-Only Nav Links */}
          <div className={styles.mobileOnlyLinks}>
            <a href="#stages" onClick={(e) => handleLinkClick(e, 'stages')}>
              Этапы работы
            </a>
            
            <a href="#testimonials" onClick={(e) => handleLinkClick(e, 'testimonials')}>
              Отзывы
            </a>
            
            <a href="#docs" onClick={(e) => handleLinkClick(e, 'docs')}>
              Документы
            </a>
          </div>
          
          <a href="#contacts" onClick={(e) => handleLinkClick(e, 'contacts')}>
            Контакты
          </a>

          {/* Logo, title and phone number for the bottom of mobile menu */}
          <div className={styles.navFooter}>
            <div className={styles.navLogo}>
              <img src="/realty_app/logo-fixed.svg" alt="Logo" width="150" height="133" />
            </div>
            <div className={styles.navTitle}>
              АГЕНТСТВО
              <span className={styles.navSubtitle}>недвижимости</span>
            </div>
            <div className={styles.navPhone}>
              <a href="tel:+375445630206">+375 (44) 563-02-06</a>
            </div>
          </div>
        </nav>

        {/* Contact Info for Desktop */}
        <div className={styles.contact}>
          <a href="tel:+375445630206">+375 (44) 563-02-06</a>
        </div>

        {/* Mobile "Личный кабинет" link */}
        <div className={styles.mobileLoginLink}>
          <Link href="#">Личный кабинет</Link>
        </div>
      </div>
    </header>
  );
};

export default Header;

================================================================================
// FILE: src/components/HeroSection/HeroSection.module.css
================================================================================

.heroSection {
  width: 100%;
  height: 100vh;
  position: relative;
  padding-top: 70px; /* Account for fixed header */
  display: flex;
  justify-content: center;
  overflow: hidden;
}

/* Main container with background image */
.container {
  position: relative;
  max-width: 1400px;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  background-image: url('/realty_app/HomeBG1.jpg');
  background-size: cover;
  background-position: center;
}

/* Content area for agency info */
.content {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  padding: 0 60px;
}

.heroContent {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  max-width: 600px;
}

.logoTitleWrapper {
  display: flex;
  flex-direction: row;
  align-items: center;
  margin-bottom: 15px;
}

.logo {
  margin-right: 20px;
}

.logo img {
  width: 150px;
  height: 150px;
}

.title {
  font-size: 36px;
  font-weight: 700;
  color: #20222B;
  display: flex;
  flex-direction: column;
  line-height: 1.1;
  text-transform: uppercase;
  margin: 0;
}

.subtitle {
  font-size: 36px;
  font-weight: 300;
}

.slogan {
  font-size: 18px;
  color: #20222B;
  margin: 0;
  padding-left: 0px; /* Aligns with the start of the title text */
}

.ctaButton {
  display: none; /* Hide in desktop view */
}

.ctaButton a {
  display: inline-block;
  padding: 12px 24px;
  color: #000;
  text-decoration: none;
  font-weight: 500;
  font-size: 16px;
  text-transform: uppercase;
  border: 2px solid #000;
  transition: all 0.3s ease;
}

.arrow {
  margin-left: 8px;
}

/* Media queries for responsive design */
@media (max-width: 1400px) {
  .container {
    max-width: 100%;
  }
}

@media (max-width: 992px) {
  .logo img {
    width: 75px;
    height: 75px;
  }
  
  .title, .subtitle {
    font-size: 30px;
  }
  
  .slogan {
    padding-left: 95px;
  }
}

@media (max-width: 768px) {
  .heroSection {
    padding-top: 56px;
  }
  
  .content {
    padding: 0 20px;
    justify-content: flex-start;
    padding-top: 100px;
  }
  
  .heroContent {
    width: 100%;
    align-items: center;
    text-align: center;
    max-width: none;
  }
  
  .logoTitleWrapper {
    flex-direction: column;
    margin-bottom: 10px;
  }
  
  .logo {
    margin-right: 0;
    margin-bottom: 15px;
  }
  
  .logo img {
    width: 100px;
    height: 100px;
  }
  
  .title {
    font-size: 30px;
    text-align: center;
    align-items: center;
  }
  
  .subtitle {
    font-size: 30px;
  }
  
  .slogan {
    display: block;
    font-size: 18px;
    margin: 15px 0;
    padding-left: 0;
  }
  
  .ctaButton {
    display: block; /* Show in mobile view */
    width: 100%;
    margin-top: 30px;
    display: flex;
    justify-content: center;
  }
  
  .ctaButton a {
    display: inline-block;
    width: auto;
    min-width: 250px;
    max-width: 300px;
    text-align: center;
    padding: 12px 24px;
    box-sizing: border-box;
  }
}

================================================================================
// FILE: src/components/HeroSection/HeroSection.tsx
================================================================================

import React from 'react';
import styles from './HeroSection.module.css';

export default function HeroSection() {
  // Direct scroll function for the CTA button
  const handleCTAClick = (e: React.MouseEvent<HTMLAnchorElement>) => {
    e.preventDefault();
    
    const formSection = document.getElementById('form');
    if (!formSection) return;
    
    const headerHeight = window.innerWidth <= 768 ? 90 : 70;
    const extraPadding = 20;
    
    const y = formSection.getBoundingClientRect().top + window.scrollY - (headerHeight + extraPadding);
    
    window.scrollTo({
      top: y,
      behavior: 'smooth'
    });
    
    // Update URL without triggering a scroll
    window.history.pushState(null, '', '#form');
  };

  return (
    <section className={styles.heroSection}>
      {/* Main content container - 1400px wide */}
      <div className={styles.container}>
        <div className={styles.content}>
          <div className={styles.heroContent}>
            <div className={styles.logoTitleWrapper}>
              <div className={styles.logo}>
                <img src="/realty_app/LOGO_4.svg" alt="Logo" />
              </div>
              <h1 className={styles.title}>
                АГЕНТСТВО
                <span className={styles.subtitle}>недвижимости</span>
              </h1>
            </div>
            <p className={styles.slogan}>Вместе мы сможем больше!</p>
            <div className={styles.ctaButton}>
              <a href="#form" onClick={handleCTAClick}>
                ОСТАВИТЬ ЗАЯВКУ <span className={styles.arrow}>→</span>
              </a>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}

================================================================================
// FILE: src/components/HeroSection/assets/HomeBG1.jpg
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/components/HeroSection/assets/bg1.jpg
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/components/PrincipSection/PrincipSection.module.css
================================================================================

.principlesSection {
    width: 100%;
    padding: 0;
    display: flex;
    justify-content: center;
    color: white;
    margin: 0;
    margin-top: -1px; /* Fix for the gap between sections */
  }
    
  .container {
    max-width: 1400px;
    width: 100%;
    background-color: #292D3E;
    padding: 40px 60px 60px; /* Adjusted top padding from 60px to 40px */
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    margin-top: 0px !important; /* Reduced from 60px */
  }
    
  .title {
    font-size: 36px;
    font-weight: 400;
    margin-bottom: 30px;
    margin-top: 0; /* Ensure no extra spacing from the title */
    text-transform: uppercase;
    letter-spacing: 1px;
    text-align: center;
    color: #F5A623;
  }
  
.description {
  font-size: 16px;
  line-height: 1.6;
  margin-bottom: 40px;
  color: rgba(255, 255, 255, 0.8);
  text-align: center;
  max-width: 700px;
}
  
.buttonContainer {
  margin-top: 20px;
}
  
.consultButton {
  display: inline-block;
  padding: 14px 30px;
  background-color: #b89567;
  color: white;
  text-decoration: none;
  border-radius: 4px;
  font-size: 16px;
  transition: background-color 0.3s ease;
  border: none;
  cursor: pointer;
}
  
.consultButton:hover {
  background-color: #9a7b53;
}
  
/* Media queries */
@media (max-width: 1400px) {
  .container {
    max-width: 100%;
  }
}
  
@media (max-width: 1200px) {
  .container {
    padding: 60px 40px;
  }
}
  
@media (max-width: 992px) {
  .title {
    font-size: 30px;
  }

  .description {
    max-width: 90%;
  }
}
  
@media (max-width: 768px) {
  /* Fix the spacing for mobile view */
  .principlesSection {
    margin-top: 0;
    padding-top: 0;
  }
  
  .container {
    padding: 30px 20px 40px; /* Reduced top padding on mobile */
    margin-top: 0px !important; /* Further reduced on mobile */
  }
  
  .title {
    margin-bottom: 20px;
    margin-top: 0;
    font-size: 28px;
  }
  
  /* If you have a header spacer div, adjust it for mobile */
  .headerSpacer {
    height: 60px !important; /* Match your mobile header height */
  }
  
  /* Ensure title is immediately visible without extra space */
  .header {
    margin-top: 0;
  }
  
  .description {
    font-size: 15px;
  }
  
  .consultButton {
    padding: 12px 24px;
    font-size: 15px;
  }
}

@media (max-width: 480px) {
  .container {
    padding: 25px 15px;
  }
  
  .title {
    font-size: 24px;
  }
  
  .description {
    font-size: 14px;
  }
  
  /* Fix for any potential spacers or layout elements */
  .withHeaderPadding {
    padding-top: 60px; /* Reduced padding for mobile */
  }
}

================================================================================
// FILE: src/components/PrincipSection/PrincipSection.tsx
================================================================================

'use client';

import React from 'react';
import styles from './PrincipSection.module.css';

export default function TeamPrinciplesSection() {
  return (
    <section className={styles.principlesSection}>
      <div className={styles.container}>
        <h2 className={styles.title}>НАШ ГЛАВНЫЙ ПРИНЦИП ВНУТРИ КОМАНДЫ</h2>
        
        <p className={styles.description}>
          Мы не конкурируем между собой, а сотрудничаем. Подменяем друг
          друга, делимся опытом, а также клиентами, продавцами и покупателями.
          От этого выигрывают все. Доверьтесь нам и мы поможем вам сделать
          правильный выбор!
        </p>
        
        <div className={styles.buttonContainer}>
          <a href="/realty_app/consultation" className={styles.consultButton}>
            Бесплатная консультация
          </a>
        </div>
      </div>
    </section>
  );
}

================================================================================
// FILE: src/components/PropertiesCarousel/PropertiesCarousel.module.css
================================================================================

.propertiesSection {
  width: 100%;
  padding: 0;
  display: flex;
  justify-content: center;
  color: white;
}

.container {
  max-width: 1400px;
  width: 100%;
  background-color: #20222B;
  padding: 60px 60px;
  position: relative;
}

.title {
  font-size: 36px;
  font-weight: 400;
  margin-bottom: 50px;
  scroll-margin-top: 300px;
}

.carouselContainer {
  position: relative;
  display: flex;
  align-items: center;
  margin-bottom: 30px;
}

.carousel {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 24px;
  width: 100%;
}

.propertyCard {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.imageContainer {
  position: relative;
  overflow: hidden;
  margin-bottom: 16px;
}

.imageWrapper {
  position: relative;
  width: 100%;
  aspect-ratio: 380 / 314;
  overflow: hidden;
}

.propertyImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.imageWrapper:hover .propertyImage {
  transform: scale(1.05);
}

.dimensions {
  position: absolute;
  bottom: 10px;
  right: 10px;
  background-color: rgba(0, 0, 0, 0.6);
  color: white;
  padding: 5px 8px;
  border-radius: 4px;
  font-size: 12px;
  z-index: 10;
}

.propertyTitle {
  font-size: 25px;
  font-weight: 200;
  margin-bottom: 20px;
}

.propertyLink {
  color: #BA9778;
  text-decoration: none;
  font-size: 16px;
  display: flex;
  align-items: center;
  margin-top: auto;
}

.arrow {
  margin-left: 8px;
  transition: transform 0.3s ease;
}

.propertyLink:hover .arrow {
  transform: translateX(5px);
}

.navButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  border: 1px solid #BA9778;
  background: transparent;
  color: #BA9778;
  font-size: 20px;
  cursor: pointer;
  transition: all 0.3s ease;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10;
}

.navButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.5);
}

.prevButton {
  left: -25px;
}

.nextButton {
  right: -25px;
}

/* Optional Navigation Dots */
.dotsContainer {
  display: flex;
  justify-content: center;
  gap: 8px;
  margin-top: 20px;
}

.dot {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.3);
  border: none;
  cursor: pointer;
  padding: 0;
  transition: all 0.3s ease;
}

.activeDot {
  background-color: #F5A623;
  transform: scale(1.2);
}

@media (max-width: 1400px) {
  .container {
    max-width: 100%;
  }
}

@media (max-width: 1200px) {
  .container {
    padding: 60px 40px;
  }
  
  .carousel {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .navButton {
    width: 45px;
    height: 45px;
  }
}

@media (max-width: 768px) {
  .propertiesSection {
    margin: 0;
    margin-top: -1px; /* Fix for the gap between sections */
  }
  
  .container {
    padding: 40px 20px;
  }
  
  .carousel {
    grid-template-columns: 1fr;
  }
  
  .propertyCard {
    max-width: 100%;
    margin: 0 auto;
  }
  
  .navButton {
    width: 40px;
    height: 40px;
  }
  
  .prevButton {
    left: -10px;
  }
  
  .nextButton {
    right: -10px;
  }
  
  .imageWrapper {
    max-width: 100%;
  }
}

================================================================================
// FILE: src/components/PropertiesCarousel/PropertiesCarousel.tsx
================================================================================

'use client';

import React, { useState, useEffect } from 'react';
import styles from './PropertiesCarousel.module.css';
import OurProjects1 from "./assets/OurProjects1.png";
import OurProjects2 from "./assets/OurProjects2.png";
import OurProjects3 from "./assets/OurProjects3.png";
import OurProjects4 from "./assets/OurProjects1.jpg"; 
import OurProjects5 from "./assets/OurProjects2.jpg"; 

export default function PropertiesCarousel() {
  // Property data with image src paths
  const properties = [
    {
      id: 1,
      image: OurProjects1.src,
      title: 'Квартиры',
      link: '#',
    },
    {
      id: 2,
      image: OurProjects2.src,
      title: 'Дома, коттеджи',
      link: '#',
    },
    {
      id: 3,
      image: OurProjects3.src,
      title: 'Коммерческая недвижимость',
      link: '#',
    },
    {
      id: 4,
      image: OurProjects4.src,
      title: 'Элитная недвижимость',
      link: '#',
    },
    {
      id: 5,
      image: OurProjects5.src,
      title: 'Новостройки',
      link: '#',
    }
  ];
  
  // State to track the current slide index
  const [currentIndex, setCurrentIndex] = useState(0);
  // State to track items per view based on screen width
  const [itemsPerView, setItemsPerView] = useState(3);
  
  // Update itemsPerView based on screen width
  useEffect(() => {
    const handleResize = () => {
      if (window.innerWidth <= 768) {
        setItemsPerView(1);
      } else if (window.innerWidth <= 1200) {
        setItemsPerView(2);
      } else {
        setItemsPerView(3);
      }
    };
    
    // Set initial value
    handleResize();
    
    // Add event listener for window resize
    window.addEventListener('resize', handleResize);
    
    // Clean up event listener
    return () => {
      window.removeEventListener('resize', handleResize);
    };
  }, []);
  
  // Calculate total number of possible starting indices
  const maxStartIndex = Math.max(0, properties.length - itemsPerView);
  
  // Handle next slide
  const nextSlide = () => {
    setCurrentIndex(prevIndex => 
      prevIndex >= maxStartIndex ? 0 : prevIndex + 1
    );
  };
  
  // Handle previous slide
  const prevSlide = () => {
    setCurrentIndex(prevIndex => 
      prevIndex <= 0 ? maxStartIndex : prevIndex - 1
    );
  };
  
  // Get visible properties for current view
  const visibleProperties = properties.slice(
    currentIndex,
    currentIndex + itemsPerView
  );

  return (
      <section id="properties" className={styles.propertiesSection}>
        <div className={styles.container}>
          <h2 className={styles.title}>Наши объекты</h2>
    
          <div className={styles.carouselContainer}>
            {/* Карусель отключена — показываем просто первые три объекта */}
            <div className={styles.carousel}>
              {properties.slice(0, 3).map((property) => (
                <div key={property.id} className={styles.propertyCard}>
                  <div className={styles.imageContainer}>
                    <div className={styles.imageWrapper}>
                      <img 
                        src={property.image} 
                        alt={property.title}
                        className={styles.propertyImage}
                      />
                    </div>
                  </div>
                  <h3 className={styles.propertyTitle}>{property.title}</h3>
                  <a href={property.link} className={styles.propertyLink}>
                    ПОДРОБНЕЕ <span className={styles.arrow}>→</span>
                  </a>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>
    );
}

================================================================================
// FILE: src/components/PropertiesCarousel/assets/OurProjects1.jpg
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/components/PropertiesCarousel/assets/OurProjects1.png
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/components/PropertiesCarousel/assets/OurProjects2.jpg
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/components/PropertiesCarousel/assets/OurProjects2.png
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/components/PropertiesCarousel/assets/OurProjects3.jpg
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/components/PropertiesCarousel/assets/OurProjects3.png
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/components/PropertiesSection/PropertiesSection.module.css
================================================================================

.propertiesSection {
    background-color: #20222B;
    color: white;
    padding: 80px 0;
  }
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 24px;
  }
  
  .title {
    font-size: 36px;
    font-weight: 400;
    margin-bottom: 40px;
    scroll-margin-top: 300px;
  }
  
  .propertiesGrid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 30px;
  }
  
  .propertyCard {
    background-color: #2A2D38;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.3s ease;
  }
  
  .propertyCard:hover {
    transform: translateY(-5px);
  }
  
  .propertyImage {
    width: 100%;
    height: 200px;
    overflow: hidden;
  }
  
  .imagePlaceholder {
    width: 100%;
    height: 100%;
    background-color: #3A3D48;
  }
  
  .propertyInfo {
    padding: 20px;
  }
  
  .propertyTitle {
    font-size: 18px;
    font-weight: 600;
    margin-bottom: 8px;
  }
  
  .propertyLocation {
    font-size: 14px;
    color: #A0A0A0;
    margin-bottom: 12px;
  }
  
  .propertyPrice {
    font-size: 20px;
    font-weight: 700;
    color: #F5A623;
    margin-bottom: 16px;
  }
  
  .propertyButton {
    display: inline-block;
    background-color: transparent;
    color: white;
    border: 1px solid white;
    padding: 8px 16px;
    border-radius: 4px;
    text-decoration: none;
    transition: all 0.3s ease;
  }
  
  .propertyButton:hover {
    background-color: white;
    color: #20222B;
  }
  
  @media (max-width: 768px) {
    .propertiesGrid {
      grid-template-columns: 1fr;
    }
  }

================================================================================
// FILE: src/components/PropertiesSection/PropertiesSection.tsx
================================================================================

import React from 'react';
import styles from './PropertiesSection.module.css';

export default function PropertiesSection() {
  // This would normally come from an API or data source
  const properties = [
    {
      id: 1,
      image: '/realty_app/property1.jpg', // You'd need to add these images
      title: 'Жилой комплекс "Северный"',
      location: 'Минск, ул. Центральная',
      price: 'от 95,000 BYN'
    },
    {
      id: 2,
      image: '/realty_app/property2.jpg',
      title: 'Жилой комплекс "Восточный"',
      location: 'Минск, ул. Восточная',
      price: 'от 85,000 BYN'
    }
  ];

  return (
    <section id="properties" className={styles.propertiesSection}>
      <div className={styles.container}>
        <h2 className={styles.title}>Наши объекты</h2>
        
        <div className={styles.propertiesGrid}>
          {properties.map(property => (
            <div key={property.id} className={styles.propertyCard}>
              <div className={styles.propertyImage}>
                {/* Use a placeholder for now */}
                <div className={styles.imagePlaceholder}></div>
              </div>
              <div className={styles.propertyInfo}>
                <h3 className={styles.propertyTitle}>{property.title}</h3>
                <p className={styles.propertyLocation}>{property.location}</p>
                <p className={styles.propertyPrice}>{property.price}</p>
                <a href="#" className={styles.propertyButton}>Подробнее</a>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}

================================================================================
// FILE: src/components/ScrollFix/ScrollFix.tsx
================================================================================

'use client';

import { useEffect } from 'react';
import { usePathname } from 'next/navigation';

export default function ScrollFix() {
  const pathname = usePathname();

  useEffect(() => {
    // Function to get proper header height based on viewport
    const getHeaderHeight = () => {
      const header = document.querySelector('header');
      if (window.innerWidth <= 768) {
        return header ? header.offsetHeight : 90;
      }
      return header ? header.offsetHeight : 70;
    };

    // Function to scroll to section with proper offset
    const scrollToSection = (id: string) => {
      const element = document.getElementById(id);
      if (!element) return;

      const headerHeight = getHeaderHeight();
      const extraPadding = 20;
      
      const yOffset = headerHeight + extraPadding;
      const y = element.getBoundingClientRect().top + window.scrollY - yOffset;
      
      window.scrollTo({
        top: y,
        behavior: 'smooth'
      });
    };

    // Handle initial hash in URL
    if (window.location.hash) {
      const id = window.location.hash.substring(1);
      
      // Use setTimeout to ensure DOM is fully loaded
      setTimeout(() => {
        scrollToSection(id);
      }, 500);
    }

    // Set up click handlers for all hash links 
    const setupHashLinks = () => {
      document.querySelectorAll('a[href^="#"]').forEach(link => {
        // Use arrow function to avoid 'this' context issues
        link.addEventListener('click', (e) => {
          const href = (e.currentTarget as HTMLAnchorElement).getAttribute('href');
          if (!href || href === '#') return;
          
          const id = href.substring(1);
          const element = document.getElementById(id);
          
          if (element) {
            e.preventDefault();
            scrollToSection(id);
            history.pushState(null, '', href);
          }
        });
      });
    };

    // Apply scroll margins to all section elements with IDs
    const applyScrollMargins = () => {
      document.querySelectorAll('section[id]').forEach(section => {
        const headerHeight = getHeaderHeight();
        section.setAttribute('style', `scroll-margin-top: ${headerHeight + 20}px;`);
      });
    };

    // Initialize both functions
    setupHashLinks();
    applyScrollMargins();
    
    // Update margins when window resizes
    window.addEventListener('resize', applyScrollMargins);
    
    return () => {
      window.removeEventListener('resize', applyScrollMargins);
    };
  }, [pathname]);

  return null;
}

================================================================================
// FILE: src/components/TeamMemberCard/TeamMemberCard.module.css
================================================================================

.memberCard {
  display: flex;
  flex-direction: column;
  color: white;
  width: 100%;
  height: 100%;
  position: relative;
}

.imageContainer {
  width: 100%;
  position: relative;
  overflow: hidden;
  margin-bottom: 16px;
  aspect-ratio: 3/4; /* Match Figma aspect ratio */
  background-color: #2F3140; /* Matching Figma design */
}

.memberImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.memberInfo {
  padding: 0;
}

.memberPosition {
  font-size: 16px;
  font-weight: 500;
  color: #BA9778; /* Gold color from Figma */
  margin-bottom: 4px;
  line-height: 1.2;
}

.memberSubPosition {
  font-size: 16px;
  font-weight: 500;
  color: #BA9778; /* Gold color from Figma */
  margin-bottom: 8px;
  line-height: 1.2;
}

.memberName {
  font-size: 16px;
  font-weight: 500;
  margin-bottom: 10px;
  line-height: 1.3;
}

.reviewsLink {
  display: inline-flex;
  align-items: center;
  color: rgba(255, 255, 255, 0.6);
  text-decoration: none;
  font-size: 14px;
  transition: color 0.3s;
}

.reviewsLink:hover {
  color: white;
}

.arrow {
  margin-left: 5px;
}

@media (max-width: 768px) {
  .imageContainer {
    aspect-ratio: 3/4; /* Maintain same aspect ratio on mobile */
    margin-bottom: 16px;
  }
  
  .memberInfo {
    padding: 0;
  }
  
  .memberPosition, 
  .memberSubPosition {
    font-size: 14px;
    line-height: 1.2;
  }
  
  .memberName {
    font-size: 14px;
    line-height: 1.3;
    margin-bottom: 8px;
  }
  
  .reviewsLink {
    font-size: 12px;
  }
}

================================================================================
// FILE: src/components/TeamMemberCard/TeamMemberCard.tsx
================================================================================

'use client';

import React from 'react';
import styles from './TeamMemberCard.module.css';

export interface TeamMemberProps {
  id: number;
  image: string;
  name: string;
  position: string;
  subPosition?: string;
  details?: string;
  reviewsLink?: string;
}

const TeamMemberCard: React.FC<TeamMemberProps> = ({
  image,
  name,
  position,
  subPosition,
  details,
  reviewsLink
}) => {
  return (
    <div className={styles.teamMemberCard}>
      <div className={styles.imageContainer}>
        <img 
          src={image} 
          alt={`${name} - ${position}`} 
          className={styles.memberImage}
        />
      </div>
      <div className={styles.memberInfo}>
        <div className={styles.positionInfo}>
          {position}
          {subPosition && (
            <>
               &nbsp;<span className={styles.subPosition}>{subPosition}</span>
            </>
          )}
        </div>
        <h3 className={styles.memberName}>{name}</h3>
        {details && <p className={styles.memberDetails}>{details}</p>}
        {reviewsLink && (
          <a href={reviewsLink} className={styles.reviewsLink}>
            Смотреть отзывы <span className={styles.arrow}>→</span>
          </a>
        )}
      </div>
    </div>
  );
};

export default TeamMemberCard;

================================================================================
// FILE: src/components/TeamSection/TeamSection.module.css
================================================================================

.teamSection {
  width: 100%;
  padding: 0;
  display: flex;
  justify-content: center;
  color: white;
  margin: 0; /* Added explicit margin */
  margin-top: -1px; /* Fix for the gap between sections */

}

.container {
  max-width: 1400px;
  width: 100%;
  background-color: #20222B;
  padding: 60px 60px;
  position: relative;
}

/* Customize the carousel inside the team section */
.teamSection :global(.navButton) {
  background: transparent;
  border: 1px solid rgba(255, 255, 255, 0.3);
}

.teamSection :global(.navButton:hover) {
  background-color: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.5);
}

@media (max-width: 1400px) {
  .container {
    max-width: 100%;
  }
}

@media (max-width: 1200px) {
  .container {
    padding: 60px 40px;
  }
}

@media (max-width: 768px) {
  .container {
    padding: 40px 20px;
  }
}

================================================================================
// FILE: src/components/TeamSection/TeamSection.tsx
================================================================================

'use client';

import React from 'react';
import styles from './TeamSection.module.css';
import CardCarousel from '../CardCarousel/CardCarousel';
import TeamMemberCard, { TeamMemberProps } from '../TeamMemberCard/TeamMemberCard';

// Import your team member images
import member1 from './assets/member1.png';
import member2 from './assets/member2.png';
import member3 from './assets/member3.png';
import member4 from './assets/member4.png';

export default function TeamSection() {
  // Team member data
  const teamMembers: TeamMemberProps[] = [
    {
      id: 1,
      image: member1.src,
      name: 'Симченко Алексей Александрович',
      position: 'Учредитель,',
      subPosition: 'директор, риэлтер',
      reviewsLink: '#'
    },
    {
      id: 2,
      image: member2.src,
      name: 'Кабышко Никита Викторович',
      position: 'Заместитель',
      subPosition: ' директора, риэлтер',
      reviewsLink: '#'
    },
    {
      id: 3,
      image: member3.src,
      name: 'Симченко Евгения Андреевна',
      position: 'Риэлтер',
      reviewsLink: '#'
    },
    {
      id: 4,
      image: member4.src,
      name: 'Соловьева Татьяна Михайловна',
      position: 'Риэлтер',
      reviewsLink: '#'
    },
    // Add more team members if needed
    {
      id: 5,
      image: member1.src, // Reusing image as placeholder
      name: 'Иванов Иван Иванович',
      position: 'Риэлтер',
      reviewsLink: '#'
    },
    {
      id: 6,
      image: member2.src, // Reusing image as placeholder
      name: 'Петров Петр Петрович',
      position: 'Юрист',
      reviewsLink: '#'
    }
  ];

  return (
    <section className={styles.teamSection}>
      <div className={styles.container}>
        <CardCarousel 
          title="Специалисты" 
          itemsPerView={4}
          showDots={false} /* Hide dots to match Figma design */
        >
          {teamMembers.map(member => (
            <TeamMemberCard key={member.id} {...member} />
          ))}
        </CardCarousel>
      </div>
    </section>
  );
}

================================================================================
// FILE: src/components/TeamSection/assets/member1.jpg
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/components/TeamSection/assets/member1.png
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/components/TeamSection/assets/member2.jpg
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/components/TeamSection/assets/member2.png
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/components/TeamSection/assets/member3.jpg
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/components/TeamSection/assets/member3.png
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/components/TeamSection/assets/member4.jpg
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/components/TeamSection/assets/member4.png
// [BINARY FILE - CONTENT SKIPPED]
================================================================================

================================================================================
// FILE: src/components/TestimonialsCarousel/TestimonialsCarousel.module.css
================================================================================

.testimonialsSection {
  width: 100%;
  padding: 0;
  display: flex;
  justify-content: center;
  color: white;
}

.container {
  max-width: 1400px;
  width: 100%;
  background-color: #20222B;
  padding: 80px 60px;
  position: relative;
  padding-left: 100px;
}

.sectionHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 40px;
}

.title {
  font-size: 36px;
  font-weight: 400;
  margin: 0;
  scroll-margin-top: 300px;
}

.navigation {
  display: flex;
  gap: 20px;
}

.navButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  border: 1px solid #BA9778;
  background: transparent;
  color: #BA9778;
  font-size: 20px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.navButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.5);
}

/* Carousel structure */
.carouselContainer {
  width: 100%;
  overflow: hidden;
  position: relative;
  margin-bottom: 40px;
}

.carouselTrack {
  display: flex;
  transition: transform 0.5s ease-in-out;
}

.carouselSlide {
  flex: 0 0 100%;
  width: 100%;
}

.testimonialGroup {
  display: flex;
  gap: 24px;
  width: 100%;
}

/* Card styling from the screenshot */
.testimonialCard {
  position: relative;
  background-color: white;
  color: #333;
  padding: 24px;
  border-radius: 0;
  display: flex;
  flex-direction: column;
  width: 380px;
  height: 294px;
  flex-shrink: 0;
  box-sizing: border-box;
  border: 1px solid #e0e0e0;
}

.testimonialHeader {
  margin-bottom: 16px;
}

.testimonialAuthor {
  font-size: 18px;
  font-weight: 500;
  margin: 0 0 4px 0;
}

.testimonialDate {
  font-size: 14px;
  color: #777;
}

.testimonialContent {
  font-size: 14px;
  line-height: 1.6;
  margin: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 8;
  -webkit-box-orient: vertical;
}

/* Navigation dots */
.dotsContainer {
  display: flex;
  justify-content: center;
  gap: 8px;
  margin-top: 20px;
}

.dot {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.3);
  border: none;
  cursor: pointer;
  padding: 0;
  transition: all 0.3s ease;
}

.activeDot {
  background-color: #F5A623;
  transform: scale(1.2);
}

.leaveCommentContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  margin-top: 40px;
}

.leaveCommentButton {
  padding: 12px 24px;
  background-color: #cbb18b;
  color: #222;
  border: none;
  cursor: pointer;
  font-size: 16px;
  font-weight: 500;
  transition: background-color 0.3s;
  text-align: center;
}

.leaveCommentButton:hover {
  background-color: #d9c09b;
}

@media (max-width: 1400px) {
  .container {
    max-width: 100%;
  }
}

@media (max-width: 1240px) {
  .container {
    padding: 60px 40px;
    padding-left: 40px;
  }

  .testimonialGroup {
    justify-content: center;
    gap: 20px;
      width: 33%;
  }

  .testimonialCard {
    width: 350px;
  }
}

@media (max-width: 820px) {
  .container {
    padding: 40px 20px;
  }

  .testimonialGroup {
    flex-direction: column;
    align-items: center;
    width: 100%;
  }

  .testimonialCard {
    width: 100%;
    max-width: 380px;
    margin: 0 auto;
  }

  .sectionHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: 20px;
  }

  .navigation {
    align-self: center;
  }

  .carouselTrack {
    width: 100% !important;
  }
}

@media (max-width: 480px) {
  .testimonialCard {
    height: auto;
    min-height: 250px;
  }

  .navButton {
    width: 40px;
    height: 40px;
    font-size: 16px;
  }
}

================================================================================
// FILE: src/components/TestimonialsCarousel/TestimonialsCarousel.tsx
================================================================================

'use client';

import React, { useState, useEffect } from 'react';
import styles from './TestimonialsCarousel.module.css';

interface Testimonial {
  id: number;
  author: string;
  date: string;
  content: string;
}

export default function TestimonialsCarousel() {
  // Sample testimonial data
  const testimonials: Testimonial[] = [
    {
      id: 1,
      author: 'Елена Арманская',
      date: '15.02.2025',
      content: 'Хочу выразить огромную благодарность руководителю агентства Алексею Симченко и его команде за максимально быстрое решение квартирного вопроса. Спасибо Вам за поддержку, профессионализм и внимательное отношение к клиентам. Успехов и процветания Вашему агентству.'
    },
    {
      id: 2,
      author: 'Елена Арманская',
      date: '15.02.2025',
      content: 'Хочу выразить огромную благодарность руководителю агентства Алексею Симченко и его команде за максимально быстрое решение квартирного вопроса. Спасибо Вам за поддержку, профессионализм и внимательное отношение к клиентам. Успехов и процветания Вашему агентству.'
    },
    {
      id: 3,
      author: 'Елена Арманская',
      date: '15.02.2025',
      content: 'Хочу выразить огромную благодарность руководителю агентства Алексею Симченко и его команде за максимально быстрое решение квартирного вопроса. Спасибо Вам за поддержку, профессионализм и внимательное отношение к клиентам. Успехов и процветания Вашему агентству.'
    },
    {
      id: 4,
      author: 'Елена Арманская',
      date: '15.02.2025',
      content: 'Хочу выразить огромную благодарность руководителю агентства Алексею Симченко и его команде за максимально быстрое решение квартирного вопроса. Спасибо Вам за поддержку, профессионализм и внимательное отношение к клиентам. Успехов и процветания Вашему агентству.'
    },
    {
      id: 5,
      author: 'Елена Арманская',
      date: '15.02.2025',
      content: 'Хочу выразить огромную благодарность руководителю агентства Алексею Симченко и его команде за максимально быстрое решение квартирного вопроса. Спасибо Вам за поддержку, профессионализм и внимательное отношение к клиентам. Успехов и процветания Вашему агентству.'
    },
    {
      id: 6,
      author: 'Елена Арманская',
      date: '15.02.2025',
      content: 'Хочу выразить огромную благодарность руководителю агентства Алексею Симченко и его команде за максимально быстрое решение квартирного вопроса. Спасибо Вам за поддержку, профессионализм и внимательное отношение к клиентам. Успехов и процветания Вашему агентству.'
    },
  ];

  // State for current slide
  const [currentSlide, setCurrentSlide] = useState(0);
  // State for testimonials per slide based on screen width
  const [testimonialsPerSlide, setTestimonialsPerSlide] = useState(3);
  
  // Update testimonialsPerSlide based on screen width
  useEffect(() => {
    const handleResize = () => {
      if (window.innerWidth <= 820) {
        setTestimonialsPerSlide(1);
      } else if (window.innerWidth <= 1240) {
        setTestimonialsPerSlide(2);
      } else {
        setTestimonialsPerSlide(3);
      }
    };
    
    // Set initial value
    handleResize();
    
    // Add event listener
    window.addEventListener('resize', handleResize);
    
    // Clean up event listener
    return () => {
      window.removeEventListener('resize', handleResize);
    };
  }, []);
  
  // Calculate total slides based on testimonialsPerSlide
  const totalSlides = Math.ceil(testimonials.length / testimonialsPerSlide);
  
  // Navigation handlers
  const prevSlide = () => {
    setCurrentSlide(prev => 
      prev <= 0 ? totalSlides - 1 : prev - 1
    );
  };

  const nextSlide = () => {
    setCurrentSlide(prev => 
      prev >= totalSlides - 1 ? 0 : prev + 1
    );
  };

  return (
    <section id="testimonials" className={styles.testimonialsSection}>
      <div className={styles.container}>
        <div className={styles.sectionHeader}>
          <h2 className={styles.title}>Отзывы клиентов</h2>
          <div className={styles.navigation}>
            <button 
              className={styles.navButton}
              onClick={prevSlide}
              aria-label="Previous testimonials"
            >
              ←
            </button>
            <button 
              className={styles.navButton}
              onClick={nextSlide}
              aria-label="Next testimonials"
            >
              →
            </button>
          </div>
        </div>
        
        <div className={styles.carouselContainer}>
          <div 
            className={styles.carouselTrack}
            style={{
              transform: `translateX(-${currentSlide * 100}%)`,
              width: `${totalSlides * 100}%`
            }}
          >
            {Array.from({ length: totalSlides }).map((_, slideIndex) => {
              // Get the testimonials for this slide
              const slideTestimonials = testimonials.slice(
                slideIndex * testimonialsPerSlide,
                (slideIndex + 1) * testimonialsPerSlide
              );
              
              return (
                <div key={slideIndex} className={styles.carouselSlide}>
                  <div className={styles.testimonialGroup}>
                    {slideTestimonials.map((testimonial) => (
                      <div key={testimonial.id} className={styles.testimonialCard}>
                        <div className={styles.testimonialHeader}>
                          <h3 className={styles.testimonialAuthor}>{testimonial.author}</h3>
                          <span className={styles.testimonialDate}>{testimonial.date}</span>
                        </div>
                        <p className={styles.testimonialContent}>{testimonial.content}</p>
                      </div>
                    ))}
                  </div>
                </div>
              );
            })}
          </div>
        </div>
        
        <div className={styles.dotsContainer}>
          {Array.from({ length: totalSlides }).map((_, index) => (
            <button
              key={index}
              className={`${styles.dot} ${currentSlide === index ? styles.activeDot : ''}`}
              onClick={() => setCurrentSlide(index)}
              aria-label={`Go to slide ${index + 1}`}
            />
          ))}
        </div>
        
        <div className={styles.leaveCommentContainer}>
          <button className={styles.leaveCommentButton}>
            Оставить комментарий
          </button>
        </div>
      </div>
    </section>
  );
}

================================================================================
// FILE: src/components/WorkStagesSection/WorkStagesSection.module.css
================================================================================

.workStagesSection {
  width: 100%;
  padding: 0;
  display: flex;
  justify-content: center;
  color: white;
  margin: 0;
  margin-top: -1px; /* Fix for the gap between sections */
}

.container {
  max-width: 1400px;
  width: 100%;
  background-color: #20222B;
  padding: 80px 60px;
  position: relative;
}

.title {
  font-size: 36px;
  font-weight: 400;
  margin-bottom: 60px;
  scroll-margin-top: 300px;
}

.stagesContainer {
  display: flex;
  flex-direction: column;
}

.stageRow {
  display: grid;
  grid-template-columns: 80px 300px 1fr;
  gap: 20px;
  padding: 30px 0;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.stageRow:last-child {
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.stageNumberCol {
  display: flex;
  align-items: flex-start;
}

.stageNumber {
  font-size: 20px;
  color: #BA9778;
  font-weight: 500;
}

.stageTitleCol {
  padding-right: 30px;
}

.stageTitle {
  font-size: 18px;
  font-weight: 500;
  margin: 0;
  padding-right: 20px;
}

.stageDescriptionCol {
  max-width: 750px;
}

.stageDescription {
  font-size: 14px;
  line-height: 1.6;
  color: rgba(255, 255, 255, 0.8);
  margin: 0;
}

@media (max-width: 1400px) {
  .container {
    max-width: 100%;
  }
}

@media (max-width: 1200px) {
  .container {
    padding: 60px 40px;
  }
  
  .stageRow {
    grid-template-columns: 60px 250px 1fr;
  }
}

@media (max-width: 900px) {
  .container {
    padding: 50px 30px;
  }
  
  .stageRow {
    grid-template-columns: 60px 1fr;
    /* Remove horizontal lines on tablet and mobile */
    border-top: none;
  }
  
  .stageRow:last-child {
    border-bottom: none;
  }
  
  /* Add spacing between stages instead of lines */
  .stageRow {
    margin-bottom: 30px;
  }
  
  .stageTitleCol {
    grid-column: 2;
    margin-bottom: 10px;
  }
  
  .stageDescriptionCol {
    grid-column: 2;
  }
}

@media (max-width: 600px) {
  .container {
    padding: 40px 20px;
  }
  
  .title {
    margin-bottom: 40px;
    font-size: 30px;
  }
  
  .stageRow {
    grid-template-columns: 1fr;
    gap: 10px;
    padding: 15px 0;
    margin-bottom: 25px;
    /* Ensure borders are removed */
    border: none !important;
  }
  
  .stageNumberCol {
    margin-bottom: 10px;
  }
  
  .stageNumber {
    font-size: 18px;
  }
  
  .stageTitleCol, 
  .stageDescriptionCol {
    grid-column: 1;
  }
  
  .stageTitle {
    font-size: 16px;
  }
}

================================================================================
// FILE: src/components/WorkStagesSection/WorkStagesSection.tsx
================================================================================

'use client';

import React from 'react';
import styles from './WorkStagesSection.module.css';

interface WorkStage {
  id: string;
  number: string;
  title: string;
  description: string;
}

export default function WorkStagesSection() {
  const workStages: WorkStage[] = [
    {
      id: 'stage1',
      number: '01',
      title: 'Оценка и подготовка объекта',
      description: 'На первом этапе мы проводим оценку рыночной стоимости объекта и подготавливаем его к продаже, включая профессиональную фотосъемку и создание привлекательного описания.'
    },
    {
      id: 'stage2',
      number: '02',
      title: 'Разработка маркетинговой стратегии',
      description: 'Мы создаем индивидуальную стратегию продвижения, которая включает использование онлайн-площадок, баз данных и других каналов, чтобы максимально увеличить охват потенциальных покупателей.'
    },
    {
      id: 'stage3',
      number: '03',
      title: 'Организация показов и работа с покупателями',
      description: 'Мы организуем показы объекта для заинтересованных покупателей и активно работаем с базой данных агентства для поиска подходящих клиентов, обеспечивая предоставление всей необходимой информации.'
    },
    {
      id: 'stage4',
      number: '04',
      title: 'Переговоры и согласование условий',
      description: 'Мы ведем переговоры с потенциальными покупателями, чтобы согласовать условия сделки, включая цену и сроки, защищая интересы наших клиентов на каждом шаге.'
    },
    {
      id: 'stage5',
      number: '05',
      title: 'Проверка документов и заключение сделки',
      description: 'На завершающем этапе мы тщательно проверяем все документы, подготавливаем необходимые справки и организуем подписание договора купли-продажи, закрытую сделку и обеспечиваем безопасность расчетов.'
    }
  ];

  return (
    <section id="stages" className={styles.workStagesSection}>
      <div className={styles.container}>
        <h2 className={styles.title}>Этапы работы</h2>
        
        <div className={styles.stagesContainer}>
          {workStages.map((stage) => (
            <div key={stage.id} className={styles.stageRow}>
              <div className={styles.stageNumberCol}>
                <div className={styles.stageNumber}>{stage.number}</div>
              </div>
              <div className={styles.stageTitleCol}>
                <h3 className={styles.stageTitle}>{stage.title}</h3>
              </div>
              <div className={styles.stageDescriptionCol}>
                <p className={styles.stageDescription}>{stage.description}</p>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}

// Collection completed: Processed 44 files, skipped 20 binary files